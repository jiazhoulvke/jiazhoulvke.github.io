<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
    <title>jiazhoulvke&#39;s Blog on jiazhoulvke&#39;s Blog</title>
    <link>http://www.jiazhoulvke.com/</link>
    <description>Recent content in jiazhoulvke&#39;s Blog on jiazhoulvke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator> 
    <language>zh-cn</language> 
    <lastBuildDate>2014-10-27 00:00:00</lastBuildDate> 
    <atom:link href="/" rel="self" type="application/rss+xml" /> 
    <item>
    <title>linux迁移至固态硬盘全过程</title>
    <link>http://www.jiazhoulvke.com/2014/10/27/linux/</link>
    <pubDate>2014-10-27 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2014/10/27/linux/</guid>
    <description>&lt;p&gt;自从台式机上用上固态硬盘后，就再也受不了笔记本上的5400转的机械硬盘了，所以这次又买了块固态硬盘打算装到笔记本上。&lt;/p&gt;

&lt;p&gt;笔记本里装的是Ubuntu 14.04 + Win7双系统，Win7主要偶尔运行一些Windows Only的软件，或者偶尔玩一下游戏，没什么特殊的配置，所以重不重装倒无所谓。Ubuntu就不一样了，我的整个开发环境都在里面，假如重装的话配置起来超级麻烦的，当初给台式机重装系统和各种配置就花了我好几天的时间，所以这次决定要直接把原来的系统迁移过来，由于之前没这么干过，整个过程提心吊胆的，还好一次搞定了。&lt;/p&gt;

&lt;p&gt;###用到的硬件###&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;笔记本Thinkpad T420，内置日立5400转硬盘、可拆卸式光驱&lt;/li&gt;
&lt;li&gt;浦科特M6S固态硬盘&lt;/li&gt;
&lt;li&gt;适用于T420的光驱位硬盘托架&lt;/li&gt;
&lt;li&gt;容量为4GB的U盘&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本次的主角小黑和M6S:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/IMG_20140921_095854.jpg&#34; alt=&#34;&#34; /&gt;
　　
&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/IMG_20141026_160058.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;###具体步骤###&lt;/p&gt;

&lt;p&gt;把笔记本自带的机械硬盘拆下来，把固态硬盘换上去；把光驱拆下来，把机械硬盘放到硬盘托里，再把硬盘托放进光驱位。固态硬盘成为主硬盘，机械硬盘成为副硬盘。&lt;/p&gt;

&lt;p&gt;将U盘插到电脑上，用Linux自带的dd将ubuntu 14.04的镜像文件写到U盘中:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo dd bs=4M if=/home/jiazhoulvke/Downloads/ubuntu-14.04.1-desktop-amd64.iso of=/dev/sdc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用国产良心软件DiskGenius给固态硬盘分好区:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;100M的Win7的系统保留分区(有点像Linux里的/boot)。&lt;/li&gt;
&lt;li&gt;50G的Win7系统分区。&lt;/li&gt;
&lt;li&gt;8G的Linux交换分区。&lt;/li&gt;
&lt;li&gt;400M给/boot。&lt;/li&gt;
&lt;li&gt;剩下的空间全部给/。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装Win7的过程不在本文讨论范围内，就不详述了。&lt;/p&gt;

&lt;p&gt;重启电脑，从U盘启动，进入live系统，挂载分区:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#sda6为固态硬盘的boot分区
#sda7为固态硬盘的root分区
#sdb5为原机械硬盘的windows分区
#sdb6为原机械硬盘的boot分区
#sdb7为原机械硬盘的root分区
sudo -s
mkdir /mnt/{data,new,old}
mount /dev/sda7 /mnt/new
mount /dev/sda6 /mnt/new/boot
mount /dev/sdb5 /mnt/data
mount /dev/sdb7 /mnt/old
mount /dev/sdb6 /mnt/old/boot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用tar备份root分区和boot分区（也可以用dd或者cp -a直接复制，我是顺便做个备份，所以用tar）:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /mnt/old
tar czf /mnt/data/ubuntu14.04.tar.gz ./*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压文件到固态硬盘：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /mnt/new
tar xzf /mnt/data/ubuntu14.04.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装grub到固态硬盘:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grub-install /dev/sda
grub-install --recheck /dev/sda
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;挂载几个目录:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mount --bind /proc /mnt/new/proc
mount --bind /dev /mnt/new/dev
mount --bind /sys /mnt/new/sys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;chroot到固态硬盘的系统中:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chroot /mnt/new
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更新grub配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;update-grub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;获取新硬盘的各分区的UUID:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;blkid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于硬盘都已经换了/etc/fstab里的信息肯定也需要更改才行，根据自己的实际情况更改好UUID。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;UUID=825537ad-82f0-44cd-9c3c-fd0603f11576 /               ext4    discard,noatime,errors=remount-ro 0       1&lt;/p&gt;

&lt;p&gt;UUID=df7e9a69-4f55-45b9-98ef-f5dbf55c72d4 /boot           ext4    discard,noatime,defaults        0       2&lt;/p&gt;

&lt;p&gt;UUID=02259789-2877-4256-b3d1-4c87e4aa6faa none            swap    sw              0       0&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;其中的discard参数是用于开启TRIM功能，noatime参数减少无谓的元数据操作，可延长固态硬盘的使用寿命。&lt;/p&gt;

&lt;p&gt;由于8G内存完全够用，所以能不用swap分区就尽量不用。在/etc/sysctl.conf中加入下面这行，减少对swap的使用:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;vm.swappiness=1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在可以重启体验新硬盘了。&lt;/p&gt;

&lt;p&gt;先在win7下用as ssd benchmark测试一下:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/as-ssd-bench PLEXTOR PX-128M6 2014.10.26 19-47-52.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;写入稍微有点慢，没有台式机上的三星840EVO快，不过还能接受。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/as-ssd-bench Samsung SSD 840  2014.6.11 19-03-57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;再在ubuntu下用hdparm对比一下固态硬盘和机械硬盘的速度:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;~$sudo hdparm -Tt /dev/sda7&lt;br&gt;
/dev/sda7:&lt;br&gt;
 Timing cached reads:   13492 MB in  2.00 seconds = 6748.96 MB/sec&lt;br&gt;
 Timing buffered disk reads: 1276 MB in  3.00 seconds = 424.90 MB/sec&lt;br&gt;
~$sudo hdparm -Tt /dev/sdb6&lt;br&gt;
/dev/sdb6:&lt;br&gt;
 Timing cached reads:   12904 MB in  2.00 seconds = 6454.72 MB/sec&lt;br&gt;
 Timing buffered disk reads: 214 MB in  3.02 seconds =  70.76 MB/sec&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;差距太明显了，原来从开机到进入系统要30秒以上，现在基本上只要10秒左右；原来要好几秒才能启动的程序也基本都是秒开了。如丝般顺滑~~&lt;/p&gt;

&lt;p&gt;参考文章:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Solid_State_Drives&#34;&gt;https://wiki.archlinux.org/index.php/Solid_State_Drives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description></item> 
    <item>
    <title>桌面端Firefox远程调试Android端Firefox</title>
    <link>http://www.jiazhoulvke.com/2014/03/22/firefoxandroidfirefox/</link>
    <pubDate>2014-03-22 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2014/03/22/firefoxandroidfirefox/</guid>
    <description>&lt;p&gt;随着智能手机的普及，移动网站的开发也显得也越来越重要了，利用Android版Firefox自带的远程调试功能可以轻松的在PC端调试手机端的网站，实在太方便了。&lt;/p&gt;

&lt;p&gt;###具体步骤###&lt;/p&gt;

&lt;p&gt;在PC端和手机端都装上Firefox。&lt;/p&gt;

&lt;p&gt;PC端Firefox打开about:config，设置devtools.debugger.remote-enabled为True。&lt;/p&gt;

&lt;p&gt;手机端Firefox点击菜单栏的&amp;rdquo;设置&amp;rdquo;-&amp;gt;&amp;ldquo;开发者工具&amp;rdquo;，勾选&amp;rdquo;远程调试&amp;rdquo;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/Screenshot_2014-03-22-12-50-24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;将手机连接到电脑上，并启用USB调试。&lt;/p&gt;

&lt;p&gt;在终端中输入如下命令进行端口转发:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;adb forward tcp:6000 tcp:6000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在PC端Firefox中点击&amp;rdquo;工具&amp;rdquo;-&amp;gt;&amp;ldquo;Web开发者&amp;rdquo;-&amp;gt;&amp;ldquo;连接&amp;hellip;&amp;ldquo;，不用改动它的默认选项，直接点击连接。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/2014-03-22_12.59.39.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;注意你的手机，应该会出现下图的对话框,点击&amp;rdquo;确定&amp;rdquo;即可:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/Screenshot_2014-03-22-13-04-53.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;现在PC端的Firefox会出现下图:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/2014-03-22_13.07.35.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这里就点击&amp;rdquo;Google&amp;rdquo;来调试一下Andorid端已经打开的Google网站吧。PC端会弹出一个调试窗口，你可以利用它完全控制Android端Firefox的各种行为。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/2014-03-22-13_20_05.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/img/Screenshot_2014-03-22-13-18-45.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>rss地址已改变</title>
    <link>http://www.jiazhoulvke.com/2014/03/13/rss/</link>
    <pubDate>2014-03-13 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2014/03/13/rss/</guid>
    <description>&lt;p&gt;feedsky实在是烂透了，趁这次迁移博客顺便把feedsky也换掉，现在新的feed是&lt;a href=&#34;http://feeds.feedburner.com/jiazhoulvke。&#34;&gt;http://feeds.feedburner.com/jiazhoulvke。&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>博客迁移至github</title>
    <link>http://www.jiazhoulvke.com/2014/03/12/github/</link>
    <pubDate>2014-03-12 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2014/03/12/github/</guid>
    <description>&lt;p&gt;目前用的便宜空间不够稳定，速度时快时慢，实在很影响心情，干脆一不做二不休也随波逐流换到github去了。&lt;/p&gt;
</description></item> 
    <item>
    <title>时隔两年，myproject终于更新了</title>
    <link>http://www.jiazhoulvke.com/2014/02/08/e697b6e99a94e4b8a4e5b9b4efbc8cmyprojecte7bb88e4ba8ee69bb4e696b0e4ba86/</link>
    <pubDate>2014-02-08 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2014/02/08/e697b6e99a94e4b8a4e5b9b4efbc8cmyprojecte7bb88e4ba8ee69bb4e696b0e4ba86/</guid>
    <description>

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/170.html&#34;&gt;2012年6月我写了myproject这个插件&lt;/a&gt;，还只是个半成品，不过凑合着也能用，就这样一直用下去了。每次想完善一下的时候就想着先凑合着用，等有时间再改，就这样居然拖了近两年……这次终于下定决心，利用过年前的空闲时间完全重写了myproject。其实真的写起来一天就搞定了，剩下几天都是测试、修复bug。&lt;/p&gt;

&lt;h2 id=&#34;更新内容&#34;&gt;更新内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;最开始的版本是纯vimscript的，后来因为在windows下更新tags时会弹出命令行窗口就加入了一部分python代码，现在为了兼容性还是改回了纯vimscript，不再依赖python。&lt;/li&gt;
&lt;li&gt;增加 :MPCreate 命令，可以通过此命令创建项目。&lt;/li&gt;
&lt;li&gt;增加 :MPProjectList 命令，可以浏览、删除、载入通过 :MPCreate 创建的项目。&lt;/li&gt;
&lt;li&gt;保存、载入Session的命令从 :MPSaveSession、:MPLoadSession 改成了 :MPSessionSave、:MPSessionLoad。&lt;/li&gt;
&lt;li&gt;:MPCreate、:MPLoad、:MPSessionLoad、:MPSessionSave等命令都可以补全了。&lt;/li&gt;
&lt;li&gt;去掉几个实用性不大的选项。&lt;/li&gt;
&lt;li&gt;修改了部分变量名。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;命令说明&#34;&gt;命令说明&lt;/h2&gt;

&lt;h3 id=&#34;mpcreate&#34;&gt;:MPCreate&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;直接输入 :MPCreate ，myproject会让你输入项目的路径及名称，然后会将该项目保存到项目列表中。当你用 :MPLoad 载入项目时就可以利用Tab自动补全项目路径了。&lt;/li&gt;
&lt;li&gt;加入&amp;rdquo;template&amp;rdquo;参数(即:MPCreate template)，myproject会在项目中的project.vim文件中写入如下内容:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;let g:MP_Ctags_Enable = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Global_Enable = 1&lt;br /&gt;
&amp;ldquo;set cscopeprg=gtags-cscope&lt;br /&gt;
&amp;ldquo;let g:MP_Cscope_Enable = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Session_AutoSave = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Session_AutoLoad = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Write_AutoUpdate = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Source_File_Ext_Name = &amp;ldquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你可以按自己的需求去掉某个选项的注释。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加入&amp;rdquo;question&amp;rdquo;参数(即:MPCreate question)，myproject会一一询问你是否需要开启某个选项，然后将结果保存到project.vim中。见下图:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPCreate_question.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPCreate_question.png&#34; alt=&#34;MPCreate_question.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;mpprojectlist&#34;&gt;:MPProjectList&lt;/h3&gt;

&lt;p&gt;输入 :MPProjectList 会打开项目列表窗口，列出所有你创建的项目。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPProjectList.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPProjectList.png&#34; alt=&#34;MPProjectList.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;移动光标到到你需要载入的项目上，按回车即可载入。按d则删除项目。&lt;/p&gt;

&lt;p&gt;按小写的c会调用:MPCreate，按大写的C会调用:MPCreate question。&lt;/p&gt;

&lt;p&gt;按q或者ESC会关闭项目列表窗口。&lt;/p&gt;

&lt;h3 id=&#34;mpload&#34;&gt;:MPLoad&lt;/h3&gt;

&lt;p&gt;输入&amp;rdquo;:MPLoad &amp;ldquo;后按Tab可以自动补全项目列表中的项目。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPLoad.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPLoad.png&#34; alt=&#34;MPLoad.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;mpsessionsave&#34;&gt;:MPSessionSave&lt;/h3&gt;

&lt;p&gt;直接输入 :MPSessionSave 会将Session保存在项目根目录的default.session.vim文件中。&lt;/p&gt;

&lt;p&gt;假如输入&amp;rdquo;:MPSessionSave abc&amp;rdquo;则会保存到abc.session.vim。&lt;/p&gt;

&lt;h3 id=&#34;mpsessionload&#34;&gt;:MPSessionLoad&lt;/h3&gt;

&lt;p&gt;直接输入 :MPSessionLoad 会载入默认的session文件default.session.vim。&lt;/p&gt;

&lt;p&gt;假如输入&amp;rdquo;:MPSessionLoad abc&amp;rdquo;则会载入abc.session.vim。&lt;/p&gt;

&lt;p&gt;输入&amp;rdquo;:MPSessionLoad &amp;ldquo;后按Tab可以自动补全项目根目录中所有后缀为&amp;rdquo;.session.vim&amp;rdquo;的文件名。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPSessionLoad.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2014/02/MPSessionLoad.png&#34; alt=&#34;MPSessionLoad.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;变量说明&#34;&gt;变量说明&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;g:MP_ProjectList 项目列表文件。默认值: globpath($HOME, &amp;lsquo;.MP_ProjectList.vim&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;g:MP_ProjectFile 项目文件名。默认值: &amp;lsquo;project.vim&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Window_Height 项目列表高度。默认值: &amp;lsquo;10&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Auto_Close 选择项目后是否自动关闭项目列表。默认值: 1&lt;/p&gt;

&lt;p&gt;g:MP_Ctags_Enable 是否启用ctags。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Ctags_Path 定义ctags的路径。默认值: &amp;lsquo;ctags&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Ctags_Opt 定义ctags参数。默认值: &amp;ldquo;&lt;/p&gt;

&lt;p&gt;g:MP_Global_Enable 是否启用GNU global。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Global_Path 定义GNU Global的路径。默认值: &amp;lsquo;global&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Gtags_Path 定义gtags的路径。默认值: &amp;lsquo;gtags&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Cscope_Enable 是否启用cscope。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Cscope_Path 定义cscope的路径。默认值: &amp;lsquo;cscope&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Source_File_Ext_Name 需要建立tags的文件后缀名,如:&amp;lsquo;c,h,cpp&amp;rsquo;。默认值: &amp;ldquo;&lt;/p&gt;

&lt;p&gt;g:MP_ConfigTitleBar_Enable 是否允许设置标题栏。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_TitleString 标题栏字符串。默认值:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%t\ %m%r\ [%{expand(\&amp;quot;%:~:.:h\&amp;quot;)}]\ [ProjectPath=%{g:MP_Path}]\ -\ %{v:servername}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;g:MP_Session_AutoSave 是否自动保存项目session。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Session_AutoLoad 是否自动加载项目session。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_DefaultSessionName 项目默认session文件名。默认值: &amp;lsquo;default&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Session_Opt Session选项。默认值: &amp;ldquo;blank,buffers,curdir,folds,globals,options,resize,tabpages,winpos,winsize&amp;rdquo;&lt;/p&gt;

&lt;p&gt;g:MP_Path 项目路径。载入项目时插件会自动修改该变量，请勿手动设置。&lt;/p&gt;

&lt;p&gt;g:MP_Write_AutoUpdate 在文件写入时是否自动更新tags。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Bufread_AutoLoad 读入文件时是否自动载入项目文件。默认值: 0&lt;/p&gt;
&lt;/blockquote&gt;
</description></item> 
    <item>
    <title>用树莓派打造多功能家庭服务器</title>
    <link>http://www.jiazhoulvke.com/2013/11/26/e794a8e6a091e88e93e6b4bee68993e980a0e5a49ae58a9fe883bde5aeb6e5baade69c8de58aa1e599a8/</link>
    <pubDate>2013-11-26 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/11/26/e794a8e6a091e88e93e6b4bee68993e980a0e5a49ae58a9fe883bde5aeb6e5baade69c8de58aa1e599a8/</guid>
    <description>

&lt;p&gt;家里有块闲置的老硬盘，一直吃灰中，前几天买了个硬盘盒来，利用树莓派打造了一个家庭服务器，用起来非常不错。&lt;/p&gt;

&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;

&lt;p&gt;首先要有一个配置好的树莓派，并且配置一个固定IP，本文中以192.168.1.172为例。将硬盘盒通过USB接口连接到树莓派上。&lt;/p&gt;

&lt;h2 id=&#34;挂载硬盘&#34;&gt;挂载硬盘&lt;/h2&gt;

&lt;p&gt;通过ssh连接到树莓派上，输入sudo fdisk -l，不出意外的话应该会有一个/dev/sda的设备，那就是你的硬盘了。利用fdisk给硬盘分区，一般直接分一个区就好了，文件系统格式随意，我用的是ext4。&lt;/p&gt;

&lt;p&gt;安装autofs:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install autofs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑/etc/auto.master,输入如下内容：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;/misc /etc/auto.misc&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;编辑/etc/auto.misc,输入如下内容：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;storage     -fstype=ext4        :/dev/sda1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;重启autofs服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service autofs restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建一个链接：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ln -s /misc/storage /storage
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置samba服务器&#34;&gt;配置samba服务器&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install samba samba-common-bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我懒得设密码，配置成可以匿名访问的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑/etc/samba/smb.conf，删掉自带的内容，输入如下内容:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[global] 
workgroup = WORKGROUP 
netbios name = jiazhoulvke 
server string = Linux Samba Server 
security = share 
[samba] 
path = /storage/ 
writable = yes 
browseable = yes 
guest ok = yes 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启samba服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service samba restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在就可以在你的台式机或笔记本上通过samba访问树莓派了，android的es文件管理也支持samba。&lt;/p&gt;

&lt;h2 id=&#34;比samba更好的选择-sshfs&#34;&gt;比samba更好的选择:sshfs&lt;/h2&gt;

&lt;p&gt;linux中有个很棒的软件叫sshfs，可以通过ssh将远程电脑的目录映射成本地目录，由于树莓派本身已经集成了ssh，所以配置起来非常方便。&lt;/p&gt;

&lt;p&gt;先在你的台式机或笔记本上安装sshfs:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install sshfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打开终端，输入如下命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;code&amp;gt;mkdir ~/rpi
sshfs pi@192.168.1.172:/storage/ /home/jiazhoulvke/rpi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要注意的是我的树莓派ssh是用key登录的，所以没有密码。&lt;/p&gt;

&lt;p&gt;现在在你的系统中的~/rpi就是树莓派中的/storage了，你可以像操作本地目录一样随意操作。&lt;/p&gt;

&lt;p&gt;为了重启后也能自动挂载，可以将挂载命令放入~/.profile中。&lt;/p&gt;

&lt;p&gt;sshfs也有windows版的，请自行google之。&lt;/p&gt;

&lt;h2 id=&#34;配置多媒体服务器&#34;&gt;配置多媒体服务器&lt;/h2&gt;

&lt;p&gt;创建几个目录:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /storage/dlna/{video,music,picture}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装minidlna:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install minidlna
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑/etc/minidlna.conf:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;media_dir=V,/storage/dlna/video
media_dir=A,/storage/dlna/music
media_dir=P,/storage/dlna/picture
db_dir=/var/lib/minidlna
log_dir=/var/log
port=8200
presentation_url=http://192.168.1.172:8200/
friendly_name=MyRPi
inotify=yes
notify_interval=600
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在往/storage/video里放几个视频，往/storage/music里放几首mp3,然后重启minidlna服务吧:&lt;/p&gt;

&lt;p&gt;sudo service minidlna force-reload&lt;/p&gt;

&lt;p&gt;现在用浏览器打开192.168.1.172:8200，应该能看到类似下面的信息:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MiniDLNA status&lt;br /&gt;
Audio files: 917&lt;br /&gt;
Video files: 42&lt;br /&gt;
Image files: 123&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;利用xbmc访问dlna&#34;&gt;利用XBMC访问dlna&lt;/h2&gt;

&lt;p&gt;要问PC上最好的dlna客户端是什么，那毫无疑问是XBMC了，不仅功能强大而且跨平台。&lt;/p&gt;

&lt;p&gt;先安装xbmc：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xbmc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行xbmc，然后按以下步骤配置视频源:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot005.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot005.png&#34; alt=&#34;screenshot005.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot006.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot006.png&#34; alt=&#34;screenshot006.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot007.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot007.png&#34; alt=&#34;screenshot007.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot000.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot000.png&#34; alt=&#34;screenshot000.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot001.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot001.png&#34; alt=&#34;screenshot001.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot002.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot002.png&#34; alt=&#34;screenshot002.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot003.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot003.png&#34; alt=&#34;screenshot003.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot004.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/screenshot004.png&#34; alt=&#34;screenshot004.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接下来用同样的方法配置好音乐和图片。&lt;/p&gt;

&lt;p&gt;再强烈推荐一个android应用&amp;ndash;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.xbmc.android.remote&#34;&gt;Official XBMC Remote&lt;/a&gt;,它可以遥控PC端的XBMC，把电脑变成电视机。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/unnamed.jpg&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/unnamed.jpg&#34; alt=&#34;unnamed.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;android手机同步相片到树莓派中&#34;&gt;android手机同步相片到树莓派中&lt;/h2&gt;

&lt;p&gt;安装&lt;a href=&#34;https://play.google.com/store/apps/details?id=dk.tacit.android.foldersync.lite&#34;&gt;FolderSync Lite&lt;/a&gt;。点击&amp;rdquo;账户&amp;rdquo;,然后添加一个SFTP账户，&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-26-22-04-30.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-26-22-04-30.png&#34; alt=&#34;Screenshot_2013-11-26-22-04-30.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后输入树莓派的IP地址以及帐号密码并保存。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-26-22-08-51.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-26-22-08-51.png&#34; alt=&#34;Screenshot_2013-11-26-22-08-51.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;再点击文件夹配对，根据你手机的相片存储路径进行设置：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-27-02-10-15.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-27-02-10-15.png&#34; alt=&#34;Screenshot_2013-11-27-02-10-15.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;好了，现在可以开始同步了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-26-22-15-16.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/Screenshot_2013-11-26-22-15-16.png&#34; alt=&#34;Screenshot_2013-11-26-22-15-16.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;用树莓派下载文件&#34;&gt;用树莓派下载文件&lt;/h2&gt;

&lt;p&gt;由于树莓派功耗非常低，所以非常适合用来挂机下载大文件。&lt;/p&gt;

&lt;p&gt;先安装下载软件aria2和网页服务器lighttpd:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install aria2 lighttpd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建/etc/init.d/aria2c,并输入如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
### BEGIN INIT INFO
# Provides:             aria2
# Required-Start:       $remote_fs $network
# Required-Stop:        $remote_fs $network
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Aria2 Downloader
### END INIT INFO

case &amp;quot;$1&amp;quot; in
start)
        echo -n &amp;quot;Starting aria2c&amp;quot;
        sudo -u pi aria2c --conf-path=/home/pi/.aria2/aria2.conf -D
;;
stop)
        echo -n &amp;quot;Shutting down aria2c&amp;quot;
        killall aria2c
;;
restart)
        killall aria2c
        sudo -u pi aria2c --conf-path=/home/pi/.aria2/aria2.conf -D
;;
esac
exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存后赋予其可执行权限：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod 755 /etc/init.d/aria2c

mkdir ~/.aria2
touch ~/.aria2/aria2.session
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建aria2配置文件~/.aria2/aria2.conf，并输入如下内容:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dir=/storage/
disable-ipv6=true
enable-rpc=true
rpc-allow-origin-all=true
rpc-listen-all=true
rpc-listen-port=6800
continue=true
input-file=/home/pi/.aria2/aria2.session
save-session=/home/pi/.aria2/aria2.session
max-concurrent-downloads=5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将aria2c服务设置为自启动：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo update-rc.d aria2c defaults
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行aria2c服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service aria2c start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;克隆yaaw（一个aria2c的web前端）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod a+w -R /var/www
cd /var/www/
git clone http://github.com/wzhy90/yaaw
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在可以打开&lt;a href=&#34;http://192.168.1.172/yaaw/看看效果了。&#34;&gt;http://192.168.1.172/yaaw/看看效果了。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/aria2.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/aria2.png&#34; alt=&#34;aria2.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;aria2还支持迅雷离线下载，当然前提是你有迅雷的vip会员，我个人觉得迅雷的离线下载还是很不错的，值得购买。&lt;/p&gt;

&lt;p&gt;火狐安装此油猴脚本:&lt;a href=&#34;http://s.binux.me/TLE/master/ThunderLixianExporter.user.js&#34;&gt;http://s.binux.me/TLE/master/ThunderLixianExporter.user.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;chrome安装此扩展:&lt;a href=&#34;https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen&#34;&gt;https://chrome.google.com/webstore/detail/thunderlixianassistant/eehlmkfpnagoieibahhcghphdbjcdmen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;打开&lt;a href=&#34;http://lixian.xunlei.com,点右上角的&amp;quot;设置&amp;quot;，然后进行如下设置:&#34;&gt;http://lixian.xunlei.com,点右上角的&amp;quot;设置&amp;quot;，然后进行如下设置:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/xunleilixian.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/11/xunleilixian.png&#34; alt=&#34;xunleilixian.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;现在选择你要下载的文件然后点击“批量导出”，再选择YAAW就会开始下载了。&lt;/p&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;树莓派真的很好玩！&lt;/p&gt;

&lt;p&gt;参考资料:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;《Raspberry Pi: the Perfect Home Server》&lt;a href=&#34;http://www.linuxjournal.com/content/raspberry-pi-perfect-home-server&#34;&gt;http://www.linuxjournal.com/content/raspberry-pi-perfect-home-server&lt;/a&gt;&lt;br /&gt;
《树莓派做下载机！迅雷离线，Aria2！！！》&lt;a href=&#34;http://www.shumeipai.net/thread-19154-1-1.html&#34;&gt;http://www.shumeipai.net/thread-19154-1-1.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description></item> 
    <item>
    <title>kindle paperwhite越狱更换屏保</title>
    <link>http://www.jiazhoulvke.com/2013/09/10/kindle-paperwhitee8b68ae78bb1e69bb4e68da2e5b18fe4bf9d/</link>
    <pubDate>2013-09-10 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/09/10/kindle-paperwhitee8b68ae78bb1e69bb4e68da2e5b18fe4bf9d/</guid>
    <description>&lt;p&gt;Kindle paperwhite（以下简称kpw）自带的壁纸其实挺好的，不过看多了也腻，所以想换点新鲜的。不过kpw的壁纸没法自定义，需要越狱以后才能换。&lt;/p&gt;

&lt;p&gt;先下载好需要用到的文件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://s3.amazonaws.com/G7G_FirmwareUpdates_WebDownloads/update_kindle_5.3.5.bin&#34;&gt;http://s3.amazonaws.com/G7G_FirmwareUpdates_WebDownloads/update_kindle_5.3.5.bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mobileread.com/forums/attachment.php?attachmentid=103175&amp;amp;d=1363715068&#34;&gt;http://www.mobileread.com/forums/attachment.php?attachmentid=103175&amp;amp;d=1363715068&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mobileread.com/forums/attachment.php?attachmentid=109554&amp;amp;d=1376755871&#34;&gt;http://www.mobileread.com/forums/attachment.php?attachmentid=109554&amp;amp;d=1376755871&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://w065855.blob3.ge.tt/streams/3ZRY9XE/combined-dev-certs-20121002.zip?sig=-UEBboFiM5cbpuJPund6fzGi7WxZIkRJqQw&amp;amp;type=download&#34;&gt;http://w065855.blob3.ge.tt/streams/3ZRY9XE/combined-dev-certs-20121002.zip?sig=-UEBboFiM5cbpuJPund6fzGi7WxZIkRJqQw&amp;amp;type=download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mobileread.com/forums/attachment.php?attachmentid=110497&amp;amp;d=1378492891&#34;&gt;http://www.mobileread.com/forums/attachment.php?attachmentid=110497&amp;amp;d=1378492891&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于版本等于5.3.3或高于5.3.5的系统还无法越狱，我的kpw系统版本是5.3.6,所以要从官方网站上下载5.3.5版的系统进行降级。&lt;/p&gt;

&lt;p&gt;将kpw通过usb线连接到电脑上，将update_kindle_5.3.5.bin复制到Kindle的根目录，然后断开usb连接，依次点击菜单按钮(三道杠那个)-&amp;gt;&amp;ldquo;设置&amp;rdquo;-&amp;gt;菜单按钮-&amp;gt;&amp;ldquo;更新您的Kindle&amp;rdquo;，就开始更新系统了，更新后会自动重启。&lt;/p&gt;

&lt;p&gt;再解压下载的那个kpw_jb.zip，里面有这几个文件:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jailbreak.mobi&lt;/li&gt;
&lt;li&gt;jailbreak.sh&lt;/li&gt;
&lt;li&gt;MOBI8_DEBUG&lt;/li&gt;
&lt;li&gt;README.txt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;连接kpw到电脑，将jailbreak.mobi复制到documents目录中，将jailbreak.sh和MOBI8_DEBUG复制到kpw的根目录，然后断开usb连接，在kpw里就会有本叫《Paperwhite Jailbreak》的书了，点&amp;rdquo;Jailbreak&amp;rdquo;,然后手指按住左上角的黑点两秒(实际操作中我试了好几次才成功，所以你没成功也不用着急，多按几次)，然后就开始越狱了。&lt;/p&gt;

&lt;p&gt;越狱成功后自动重启，会多出来一个jailbreak-log文件，是越狱日志，看看删了就行。&lt;/p&gt;

&lt;p&gt;现在可以下载安装最新的5.3.8，越狱不会丢的。不在乎系统新不新的话就保持5.3.5好了，反正也没太大区别。&lt;/p&gt;

&lt;p&gt;解压combined-dev-certs-20121002.zip，把其中的update_combined-dev-certs-20121002_install.bin复制到kpw的根目录，断开usb连接，然后像更新系统那样更新就行了。&lt;/p&gt;

&lt;p&gt;解压k5_rescure_pack_20130906.zip，将其中的update_rescue_pack.bin复制到kpw的根目录，断开usb连接，然后更新。&lt;/p&gt;

&lt;p&gt;解压update_usbnet_0.10.N.zip，复制update_usbnet_0.10.N_install.bin到kpw根目录，更新。&lt;/p&gt;

&lt;p&gt;点搜索按钮(也就是那个放大镜)，输入&amp;rdquo;;un&amp;rdquo;，然后按回车，就开启usbnet模式了(再次输入的话就是关闭)。再次连接电脑，输入如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo ifconfig usb0 192.168.15.1 &amp;amp;&amp;amp; ssh root@192.168.15.244
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我是直接在~/.bashrc中alias了一个别名：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias kindle=&#39;sudo ifconfig usb0 192.168.15.1 &amp;amp;&amp;amp; ssh root@192.168.15.244&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样每次只要输入kindle就行了。&lt;/p&gt;

&lt;p&gt;kpw的root密码为空，提示输入root密码时直接回车即可，然后它会提示你目前系统是只读模式，按照提示输入如下命令进入读写模式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mntroot rw
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/09/Screenshot-home-jiazhoulvke.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/09/Screenshot-home-jiazhoulvke.png&#34; alt=&#34;Screenshot-home-jiazhoulvke.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;先将系统原来的屏保备份到kpw的/mnt/us(也就是通过U盘模式连接到电脑上时显示的kpw根目录)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mv /usr/share/blanket/screensaver /mnt/us/screensaver.bak
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再创建一个软链接，将放置屏保的目录链接到/mnt/us/screensaver：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ln -sfn /mnt/us/screensaver /usr/share/blanket/screensaver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以后要改屏保就直接在电脑上把图片放到kpw的screensaver目录中就行了。&lt;/p&gt;

&lt;p&gt;图片要png格式，大小为758x1024，可以通过imagemagick转换，具体怎么转我也就不多说了。&lt;/p&gt;

&lt;p&gt;有一点一定要注意！文件名是规定死了的，必须是bg_medium_ss00.png、bg_medium_ss01.png这样的，之前我没改名直接放进去，结果根本没用，Google上搜到的好几篇国人写的教程也都没说，后来看了老外的一篇博文才知道。&lt;/p&gt;

&lt;p&gt;文件很多的情况下批量改名很麻烦，所以我写了个小脚本，把这段shell脚本放到screensaver里执行就可以。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
num=0
for file in ./*.png
do
    if [ $num -le 9 ];then
        numstr=&amp;quot;0$num&amp;quot;
    else
        numstr=&amp;quot;$num&amp;quot;
    fi
    mv $file bg_medium_ss$numstr.png
    num=`expr $num + 1`
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以后每次添加了新图片后都运行一次就行了。&lt;/p&gt;

&lt;p&gt;最后附上高清无码大图一张:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/09/IMG_20130910_111300.jpg&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/09/IMG_20130910_111300.jpg&#34; alt=&#34;IMG_20130910_111300.jpg&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>用CrossOver安装Photoshop CS2</title>
    <link>http://www.jiazhoulvke.com/2013/08/27/e794a8crossovere5ae89e8a385photoshop-cs2/</link>
    <pubDate>2013-08-27 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/08/27/e794a8crossovere5ae89e8a385photoshop-cs2/</guid>
    <description>

&lt;h3 id=&#34;什么是crossover&#34;&gt;什么是CrossOver&lt;/h3&gt;

&lt;p&gt;什么是&lt;a href=&#34;http://www.codeweavers.com/&#34;&gt;crossover&lt;/a&gt;？用官网&lt;a href=&#34;http://www.codeweavers.com/&#34;&gt;http://www.codeweavers.com/&lt;/a&gt;上的话说就是“在您的 Linux 操作系统上运行 Windows 软件”，它就是广大Linux群众喜闻乐见的&lt;a href=&#34;http://zh.wikipedia.org/wiki/Wine&#34;&gt;wine&lt;/a&gt;的商业版，相比wine更易于使用，说白了就是更傻瓜化。&lt;/p&gt;

&lt;p&gt;最近crossover正在搞&lt;a href=&#34;http://linuxtoy.org/archives/codeweavers-crossover-chinese-official-online-with-sale-activity.html&#34;&gt;优惠活动&lt;/a&gt;，原价128块的crossover现在只要64块，和linux有关的付费服务我一直以来是能支持就支持的，只有这样才能促进linux的繁荣嘛，几十块的价格也不算贵，在我能承受的范围，于是果断下单了。炫耀一下软件截图……：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/crossover.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/crossover.png&#34; alt=&#34;crossover.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;获取photoshop-cs2&#34;&gt;获取Photoshop CS2&lt;/h3&gt;

&lt;p&gt;感谢Adobe大发慈悲，把Photoshop CS2给免费了，让我可以没有负罪感的用它了。b（￣▽￣）d&lt;/p&gt;

&lt;p&gt;Photoshop CS2下载地址: &lt;a href=&#34;http://download.adobe.com/pub/adobe/magic/creativesuite/CS2_EOL/PHSP/PhSp_CS2_English.exe&#34;&gt;http://download.adobe.com/pub/adobe/magic/creativesuite/CS2_EOL/PHSP/PhSp_CS2_English.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;因为我的英语是体育老师教的，所以我还要装个汉化包: &lt;a href=&#34;http://pcedu.pconline.com.cn/soft/gj/photo/1301/3142835.html&#34;&gt;http://pcedu.pconline.com.cn/soft/gj/photo/1301/3142835.html&lt;/a&gt; 。&lt;/p&gt;

&lt;h3 id=&#34;安装photoshop-cs2&#34;&gt;安装Photoshop CS2&lt;/h3&gt;

&lt;p&gt;这里假设你已经装好了crossover，现在先打开crossover，点击“安装Windows软件”，在弹出的对话框中的“支持的程序”中的第二个就是“Adobe Photoshop CS2”。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/crossover1.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/crossover1.png&#34; alt=&#34;crossover1.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;选中它，然后点击“选择一个程序安装包”，再点击“选择安装文件”，在弹出的对话框中选择你下载的Photoshop安装文件。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/crossover2.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/crossover2.png&#34; alt=&#34;crossover2.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;至于下面的容器你可以不用管，没有容器的话crossover会自己创建的。&lt;/p&gt;

&lt;p&gt;现在点击“安装”，然后crossover会自动开始从网站上下载所需的运行库及字体，应该会弹出一些对话框，你只要一路点Next就行了。&lt;/p&gt;

&lt;p&gt;装完运行库就会开始安装Photoshop了，在要求你输入序列号的时候输入下面这个序列号：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;1045-1412-5685-1654-6343-1431&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/photoshop_setup.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/photoshop_setup.png&#34; alt=&#34;photoshop_setup.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后继续一路点Next，安装完成。&lt;/p&gt;

&lt;p&gt;接下来就是安装汉化包了。汉化包是一个exe文件，其实就是一个rar自解压程序，直接用unrar就可以解压了：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/unrar.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/unrar.png&#34; alt=&#34;unrar.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后将解压出来的文件全部复制到photoshop安装目录的Required目录中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -v *.dat ~/.cxoffice/Adobe_Photoshop_CS2/drive_c/Program\ Files/Adobe/Adobe\ Photoshop\ CS2/Required
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/hhb.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/hhb.png&#34; alt=&#34;hhb.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注意到我所写的命令和我实际操作截图里的不同了吗？“Adobe_Photoshop_CS2”是容器名，因为我之前安装了TM2013，所以已经有一个叫“腾讯_TM_2013”的容器了，这次安装Photoshop我选择把它安装到“腾讯_TM_2013”容器里，你如果是新装的容器那名字应该是“Adobe_Photosho_CS2”，请根据你的实际情况操作。&lt;/p&gt;

&lt;p&gt;文件复制过去也就安装好了，如果你是安装到新容器的话，100%是会有乱码的，因为crossover官方并没有想到你会安装汉化包，所以默认没有给你安装中文字体，你需要自行安装一个。安装是很简单的，和安装Photoshop的方法几乎一模一样，选择“运行时支持的组件”中的“文鼎中文字体”，然后选择Photoshop所在的容器，点“安装”既可。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/wending.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/wending.png&#34; alt=&#34;wending.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;按照惯例，又到了秀截图时间了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/photoshop1.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/photoshop1.png&#34; alt=&#34;photoshop.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>一个mutt配置</title>
    <link>http://www.jiazhoulvke.com/2013/08/15/e4b880e4b8aamutte9858de7bdae/</link>
    <pubDate>2013-08-15 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/08/15/e4b880e4b8aamutte9858de7bdae/</guid>
    <description>&lt;p&gt;mutt的配置挺麻烦的，以前刚学用linux的时候就尝试过一次，失败了，从此再没碰过它，最近再次尝试，发觉也没想象中那么难，这里有我的配置: &lt;a href=&#34;https://github.com/jiazhoulvke/mutt_config&#34;&gt;mutt_config&lt;/a&gt;，假如你不希望浪费精力去找教程慢慢配置的话，直接用我这个就好了，纯傻瓜式操作（当然也没傻瓜到outlook的地步……）。&lt;/p&gt;

&lt;p&gt;mutt与一般的邮件客户端很不一样。像outlook这种客户端，收发邮件和管理邮件都是自己搞定，而mutt则像是个老板，手下有一堆的员工，员工A负责收信，员工B负责发信，mutt只是一个控制中心罢了。我用到的软件(或者说员工)如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;收信:offlineimap&lt;/li&gt;
&lt;li&gt;发信:msmtp&lt;/li&gt;
&lt;li&gt;编辑邮件:vim (可以说最吸引我的就是这一点了，用习惯了vim，现在在浏览器里打完一行字都忍不住要按一下ESC……)&lt;/li&gt;
&lt;li&gt;邮件提醒:gmail-notify&lt;/li&gt;
&lt;li&gt;查看附件:wv、w3m&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;gmail-notify和offlineimap都被我设为开机自启动，offlineimap在后台隔几分钟同步一次，而当有新邮件时gmail-notify会弹出一个消息框提醒我有邮件。&lt;/p&gt;

&lt;p&gt;mutt作为一个纯命令行的邮件客户端自然是没法直接查看html格式的邮件的，所以需要通过w3m将html转换成纯文本；另外对于word、pdf之类的附件，则通过wv这类程序转换后查看;图片也可以调用display来显示。相关的转换规则可以在~/.mailcap里自行定义。&lt;/p&gt;

&lt;p&gt;我设置了&amp;lt;super&amp;gt;+M为唤出mutt的快捷键(super是linux下的windows键的叫法)，当我想发邮件或者查看邮件时按一下快捷键马上就能打开，比打开浏览器再点书签或者输网址不知快了多少倍。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/截图-2013年08月15日-20时36分26秒.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/截图-2013年08月15日-20时36分26秒.png&#34; alt=&#34;截图-2013年08月15日-20时36分26秒.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;目前的使用还比较初级，宏什么的都还没来得及去研究，那才是mutt的精髓所在。&lt;/p&gt;

&lt;p&gt;最后秀一下mutt截图：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/截图-2013年08月15日-20时38分49秒.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/截图-2013年08月15日-20时38分49秒.png&#34; alt=&#34;截图-2013年08月15日-20时38分49秒.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>Fuck Adobe!</title>
    <link>http://www.jiazhoulvke.com/2013/08/13/fuck-adobe/</link>
    <pubDate>2013-08-13 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/08/13/fuck-adobe/</guid>
    <description>&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/Screenshot-rxvt-unicode.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/Screenshot-rxvt-unicode.png&#34; alt=&#34;Screenshot-rxvt-unicode.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>Vim7.4正式发布，编译一个来体验一下！</title>
    <link>http://www.jiazhoulvke.com/2013/08/13/vim7-4e6ada3e5bc8fe58f91e5b883efbc8ce7bc96e8af91e4b880e4b8aae69da5e4bd93e9aa8ce4b880e4b88befbc81/</link>
    <pubDate>2013-08-13 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/08/13/vim7-4e6ada3e5bc8fe58f91e5b883efbc8ce7bc96e8af91e4b880e4b8aae69da5e4bd93e9aa8ce4b880e4b88befbc81/</guid>
    <description>

&lt;h3 id=&#34;首先安装mercurial&#34;&gt;首先安装mercurial&lt;/h3&gt;

&lt;p&gt;ubuntu/mint的话安装很简单:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mercurial
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;windows的话从这里下载安装: &lt;a href=&#34;http://mercurial.selenic.com/downloads/&#34;&gt;http://mercurial.selenic.com/downloads/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;下载vim源码&#34;&gt;下载vim源码&lt;/h3&gt;

&lt;p&gt;打开shell/cmd,输入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hg clone https://code.google.com/p/vim/ vim74
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;安装编译工具&#34;&gt;安装编译工具&lt;/h3&gt;

&lt;p&gt;ubuntu/mint下可以通过apt-get安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential xorg-dev libgtk2.0-dev libncurses5-dev python-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;windows下可以利用&lt;a href=&#34;http://www.mingw.org/&#34;&gt;mingw&lt;/a&gt;来编译。如果是64位的系统的话可以下载&lt;a href=&#34;http://jaist.dl.sourceforge.net/project/mingw-w64/mingw-w64/mingw-w64-release/mingw-w64-v2.0.8.tar.gz&#34;&gt;这个版本&lt;/a&gt;。解压后将mingw文件夹中的bin目录加入PATH变量中。&lt;/p&gt;

&lt;h3 id=&#34;开始编译vim&#34;&gt;开始编译Vim&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;linux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;打开shell，cd到vim源码所在目录，执行如下命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./configure --with-features=huge --enable-fontset  --enable-gui=gtk2 --enable-multibyte --enable-pythoninterp --enable-rubyinterp --enable-sniff --enable-cscope --prefix=/usr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;make VIMRUMTIME=/usr/share/vim/vim74 &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;windows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;打开cmd，cd到vim源码所在目录的src目录中，执行如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mingw32-make -f Make_ming.mak GUI=yes FEATURES=BIG ARCH=x86-64 OLE=yes STATIC_STDCPLUS=yes PYTHON=D:/bin/Python27 DYNAMIC_PYTHON=yes PYTHON_VER=27 USERNAME=jiazhoulvke USERDOMAIN=gmail.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有几点需要说明:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;ARCH=x86-64&amp;rdquo;是针对64位系统的，假如你的系统是32位的话请去掉。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;PYTHON=D:/bin/Python27 DYNAMIC_PYTHON=yes PYTHON_VER=27&amp;rdquo;是让vim支持python，请修改&amp;rdquo;D:/bin/Python27&amp;rdquo;为你的Python安装路径。假如你不需要对Python的支持，可以去掉这句。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等编译成功后，输入如下命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ..
md vim74
xcopy runtime\* vim74 /E/Y
copy src\*.exe vim74
copy src\GvimExt\gvimext.dll vim74
copy src\xxd\xxd.exe vim74
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建一个目录,比如D:\bin\vim，把vim74复制过去(假如你已经安装过vim了，请先卸载)。然后运行vim74中的install.exe，输入d后按回车，vim就安装好了。&lt;/p&gt;

&lt;h3 id=&#34;最后附上我编译的vim74的截图&#34;&gt;最后附上我编译的vim74的截图&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/Screenshot-ProjectPath-GVIM.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/08/Screenshot-ProjectPath-GVIM.png&#34; alt=&#34;Screenshot-ProjectPath-GVIM.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;嫌自己编译麻烦&#34;&gt;嫌自己编译麻烦？&lt;/h3&gt;

&lt;p&gt;传送门: &lt;a href=&#34;http://lilydjwg.is-programmer.com/2013/8/10/vim-7-4-released.40287.html&#34;&gt;http://lilydjwg.is-programmer.com/2013/8/10/vim-7-4-released.40287.html&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>linux登录时自动发送提醒邮件</title>
    <link>http://www.jiazhoulvke.com/2013/08/04/linuxe799bbe5bd95e697b6e887aae58aa8e58f91e98081e68f90e98692e982aee4bbb6/</link>
    <pubDate>2013-08-04 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/08/04/linuxe799bbe5bd95e697b6e887aae58aa8e58f91e98081e68f90e98692e982aee4bbb6/</guid>
    <description>&lt;p&gt;最近黑客太猖獗了，看公司的服务器日志文件可以看到每天黑客尝试各种sql注入各种扫描，于是我希望有一天当服务器真被攻破时，有用户通过ssh登录到公司的服务器后我能及时收到邮件提醒。&lt;/p&gt;

&lt;p&gt;由于用户在登录时都会读取/etc/bashrc这个文件，利用这个原理，只要把shell脚本写在里面就会自动执行了。&lt;/p&gt;

&lt;p&gt;最开始的版本是这样的:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;EMAILTMPFILE=&#39;/tmp/.userlogin.tmp&#39;
echo &amp;quot;From: root@wtf.com&amp;quot; &amp;gt; $EMAILTMPFILE
echo &amp;quot;sender: root@wtf.com &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;To: jiazhoulvke@鸡妹儿.com&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;Subject: `whoami`登录到服务器&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;时间:`date &#39;+%Y-%m-%d %H:%M:%S&#39;` &amp;gt;&amp;gt; $EMAILTMPFILE
(cat $EMAILTMPFILE | sendmail jiazhoulvke@鸡妹儿.com &amp;amp;&amp;amp; rm -f $EMAILTMPFILE) &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;gmail可以正常接收，并且不会乱码。但当我把邮件通过gmail转发到139邮箱时(因为139邮箱有免费的短信提醒)，在139邮箱里会乱码。&lt;/p&gt;

&lt;p&gt;这时就需要设置邮件的编码，邮件内容可以通过添加一个邮件头来说明它的编码，在Subject这行上面加入&amp;rdquo;Content-type: text/html;charset=utf-8&amp;rdquo;就行了。&lt;/p&gt;

&lt;p&gt;邮件标题就有点麻烦了，得先用base64编码，然后在前后分别加入&amp;rdquo;=?UTF-8?B?&amp;ldquo;和&amp;rdquo;?=&amp;ldquo;才行。也就是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Subject: =?UTF-8?B?已进行base64编码的标题?=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后我想知道到底当前有那些登录用户，他们的IP是什么，于是利用w命令来输出这些内容:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;w | sed &amp;quot;s/$/&amp;lt;br\/&amp;gt;/g&amp;quot; | sed &amp;quot;s/\ /\&amp;amp;nbsp;/g&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;所以最终的版本如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;EMAILTMPFILE=&#39;/tmp/.userlogin.tmp&#39;
echo &amp;quot;From: root@wtf.com&amp;quot; &amp;gt; $EMAILTMPFILE
echo &amp;quot;sender: root@wtf.com &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;To: jiazhoulvke@鸡妹儿.com&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;Content-type: text/html;charset=utf-8&amp;quot;
MAILSUBJECT=&amp;quot;`whoami`登录到服务器&amp;quot;
MAILSUBJECT_BASE64=`echo $MAILSUBJECT | base64`
echo &amp;quot;Subject: =?UTF-8?B?$MAILSUBJECT_BASE64?=&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
echo &amp;quot;时间:`date &#39;+%Y-%m-%d %H:%M:%S&#39;` &amp;gt;&amp;gt; $EMAILTMPFILE
w | sed &amp;quot;s/$/&amp;lt;br\/&amp;gt;/g&amp;quot; | sed &amp;quot;s/\ /\&amp;amp;nbsp;/g&amp;quot; &amp;gt;&amp;gt; $EMAILTMPFILE
(cat $EMAILTMPFILE | sendmail jiazhoulvke@鸡妹儿.com &amp;amp;&amp;amp; rm -f $EMAILTMPFILE) &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下辈子再也不想搞和网站有关的东西了，真心苦逼。&lt;/p&gt;
</description></item> 
    <item>
    <title>MarkdownView更新了</title>
    <link>http://www.jiazhoulvke.com/2013/07/19/markdownviewe69bb4e696b0e4ba86e4b880e4b88b/</link>
    <pubDate>2013-07-19 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/07/19/markdownviewe69bb4e696b0e4ba86e4b880e4b88b/</guid>
    <description>&lt;p&gt;加了自定义样式表的功能，没有定义的话默认使用仿github的样式。
&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=238&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/07/MarkdownView.png&#34; alt=&#34;MarkdownView&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;项目地址: &lt;a href=&#34;https://github.com/jiazhoulvke/MarkdownView&#34;&gt;https://github.com/jiazhoulvke/MarkdownView&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>RIP,Google Reader</title>
    <link>http://www.jiazhoulvke.com/2013/07/01/ripgoogle-reader/</link>
    <pubDate>2013-07-01 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/07/01/ripgoogle-reader/</guid>
    <description>&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=223&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/07/google_reader_1.jpg&#34; alt=&#34;google_reader_1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=224&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/07/google_reader_2.jpg&#34; alt=&#34;google_reader_2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>wine迅雷的乱码问题</title>
    <link>http://www.jiazhoulvke.com/2013/01/28/winee8bf85e99bb7e79a84e4b9b1e7a081e997aee9a298/</link>
    <pubDate>2013-01-28 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/01/28/winee8bf85e99bb7e79a84e4b9b1e7a081e997aee9a298/</guid>
    <description>&lt;p&gt;平时下载一些东西我都是直接用浏览器，大一点的会用aria2或者amule，不过对于死链，linux下的所有下载工具都没辙，迅雷在这方面确实是有很大的优势。&lt;/p&gt;

&lt;p&gt;我用的是linuxdeepin里提供的打包好的wine迅雷:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://packages.linuxdeepin.com/deepin/pool/main/d/deepinwine-thunder5/deepinwine-thunder5_0.0.2_all.deb&#34;&gt;http://packages.linuxdeepin.com/deepin/pool/main/d/deepinwine-thunder5/deepinwine-thunder5_0.0.2_all.deb&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;顺便提供qq2012和深度截图的地址：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb&#34;&gt;http://packages.linuxdeepin.com/deepin/pool/main/d/deepin-scrot/deepin-scrot_2.0-0deepin_all.deb&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://packages.linuxdeepin.com/deepin/pool/main/d/deepinwine-qq2012/deepinwine-qq2012_0.0.1_i386.deb&#34;&gt;http://packages.linuxdeepin.com/deepin/pool/main/d/deepinwine-qq2012/deepinwine-qq2012_0.0.1_i386.deb&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;wine迅雷下载一般的http资源是一点问题都没有的，速度也很快，但下载bt文件的时候所有的文件名全部是乱码，提示无法保存，让我很无奈，Google了一下，看到&lt;a href=&#34;http://forum.ubuntu.org.cn/viewtopic.php?f=121&amp;amp;t=313896&#34;&gt;这个帖子&lt;/a&gt;里有人提出同一个问题，原来是要再装一个ie6，这就好办了，打开终端，输入下面的代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export WINEPREFIX=$HOME/.deepinwine/wine-thunder5
winetricks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会出现这样的对话框:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/01/Winetricks.png&#34; alt=&#34;winetricks&#34; /&gt;&lt;/p&gt;

&lt;p&gt;点&amp;rdquo;确定&amp;rdquo;，再点&amp;rdquo;Install a Windows DLL or component&amp;rdquo;，选择&amp;rdquo;ie6&amp;rdquo;，点&amp;rdquo;确定&amp;rdquo;，然后会弹出提示，让你去 &lt;a href=&#34;http://www.oldversion.com/windows/internet-explorer-6-0&#34;&gt;http://www.oldversion.com/windows/internet-explorer-6-0&lt;/a&gt; 这个地址下载ie6的安装文件放到_~/.cache/winetricks/ie6_里。&lt;/p&gt;

&lt;p&gt;完成后在终端里再次运行_winetricks_，依照之前的顺序点击菜单，就会开始安装了，这一步没啥好说的。&lt;/p&gt;

&lt;p&gt;再用wine迅雷打开bt种子，已经不会乱码了。&lt;/p&gt;
</description></item> 
    <item>
    <title>MarkdownView - Vim的markdown可视化编辑插件</title>
    <link>http://www.jiazhoulvke.com/2013/01/23/markdownview-vime79a84markdowne58fafe8a786e58c96e7bc96e8be91e68f92e4bbb6/</link>
    <pubDate>2013-01-23 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/01/23/markdownview-vime79a84markdowne58fafe8a786e58c96e7bc96e8be91e68f92e4bbb6/</guid>
    <description>

&lt;h1 id=&#34;markdownview&#34;&gt;MarkdownView&lt;/h1&gt;

&lt;p&gt;markdown可视化编辑插件，可以在编辑的同时看到最终效果。&lt;/p&gt;

&lt;h2 id=&#34;安装需求&#34;&gt;安装需求&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vim编译了python支持&lt;/li&gt;
&lt;li&gt;安装了python-webkit、python-gtk、python-markdown&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;p&gt;git clone &lt;a href=&#34;https://github.com/jiazhoulvke/MarkdownView&#34;&gt;https://github.com/jiazhoulvke/MarkdownView&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;打开markdown文件&lt;/li&gt;
&lt;li&gt;输入 :MarkdownView&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;效果展示&#34;&gt;效果展示&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=210&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2013/01/MarkdownView.png&#34; alt=&#34;MarkdownView&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在Vim中对markdown文件进行修改会马上在右侧的窗口显示出来。&lt;/p&gt;

&lt;h2 id=&#34;其他说明&#34;&gt;其他说明&lt;/h2&gt;

&lt;p&gt;本插件在Linux mint 14下测试通过。&lt;/p&gt;
</description></item> 
    <item>
    <title>树莓派Raspberry Pi与主机进行文件同步</title>
    <link>http://www.jiazhoulvke.com/2013/01/06/198/</link>
    <pubDate>2013-01-06 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2013/01/06/198/</guid>
    <description>

&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;

&lt;p&gt;很想要一个类似于dropbox一样的同步工具来同步主机和树莓派中的文件，很显然树莓派里是别想有dropbox的，所以只好自己动手来实现类似的功能，用到的软件是linux里常见的rsync和python。&lt;/p&gt;

&lt;h3 id=&#34;一-给树莓派设置静态ip&#34;&gt;一、给树莓派设置静态IP&lt;/h3&gt;

&lt;p&gt;先用ssh登陆到树莓派，给树莓派设置一个静态IP ，可以在路由器上设置，也可以直接在树莓派里设置，我是在树莓派上设置的:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将内容改成下面这样:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;auto lo
iface lo inet loopback
iface eth0 inet static
address 192.168.1.72
gateway 192.168.1.1
netmask 255.255.255.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出。&lt;/p&gt;

&lt;p&gt;&amp;ldquo;192.168.1.72&amp;rdquo;是我给树莓派设置的固定IP，&amp;rdquo;192.168.1.1&amp;rdquo;是路由器的IP，请根据你的实际情况进行更改。&lt;/p&gt;

&lt;p&gt;重启网络服务:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo service networking restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其实我觉得更方便的办法是直接拔掉电源再重新插上……反正树莓派启动还是挺快的。&lt;/p&gt;

&lt;p&gt;现在树莓派的IP变成&amp;rdquo;192.168.1.72&amp;rdquo;了。&lt;/p&gt;

&lt;h3 id=&#34;二-设置ssh-key&#34;&gt;二、设置SSH KEY&lt;/h3&gt;

&lt;p&gt;为了避免以后每次ssh登陆到树莓派都需要输入密码，可以使用key登陆。&lt;/p&gt;

&lt;p&gt;在主机上运行如下命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后按几次回车，搞定。&lt;/p&gt;

&lt;p&gt;接下来用ssh-copy-id把公钥复制到树莓派中:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-copy-id -i  ~/.ssh/id_rsa.pub pi@192.168.1.72
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提示让你输入密码，输入密码后回车即可。&lt;/p&gt;

&lt;p&gt;之后就可以直接用&amp;rdquo;ssh pi@192.168.1.72&amp;rdquo;登陆到树莓派了，不再需要输入密码。&lt;/p&gt;

&lt;h3 id=&#34;三-实现主机到树莓派的同步&#34;&gt;三、实现主机到树莓派的同步&lt;/h3&gt;

&lt;p&gt;分别在主机和树莓派上创建一个文件夹用于同步，先在主机上输入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再在树莓派中输入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再在主机中创建同步脚本:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim ~/bin/rsync.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;写入如下内容:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python
import gio
import glib
import os

RSYNC=&#39;/usr/bin/rsync&#39;
SRC=&#39;/home/jiazhoulvke/rsync/&#39;
DST=&#39;pi@192.168.1.72:/home/pi/rsync/&#39;

def directory_changed(monitor,file1,file2,evt_type):
    os.system(&amp;quot;%s -ahqzt --delete  %s %s&amp;quot; % (RSYNC,SRC,DST))

gf = gio.File(SRC)
monitor = gf.monitor_directory(gio.FILE_MONITOR_NONE,None)
monitor.connect(&amp;quot;changed&amp;quot;,directory_changed)
gml = glib.MainLoop()
gml.run()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中SRC和DST根据自己的情况进行修改。&lt;/p&gt;

&lt;p&gt;赋予脚本可执行权限:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod a+x ~/bin/rsync.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将脚本设置成开机自启动:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将下面这行加进去:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su - jiazhoulvke -c &amp;quot;python /home/jiazhoulvke/bin/rsync.py&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存退出，然后重启主机。&lt;/p&gt;

&lt;p&gt;执行如下命令查看脚本是否正常启动:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ps m|grep rsync.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;假如显示类似如下的内容则表示启动成功:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2315 pts/0    -      0:00 python bin/rsync.py&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;现在测试一下能不能同步，在主机上输入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;touch ~/rsync/test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;登陆到树莓派中，输入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ls ~/rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;假如看到test文件，说明同步成功，没成功请仔细检查自己是否有哪个步骤做错了。&lt;/p&gt;

&lt;h3 id=&#34;四-实现双向同步&#34;&gt;四、实现双向同步&lt;/h3&gt;

&lt;p&gt;如今从主机到树莓派的单方向同步已经完成了。那么如何让树莓派上的修改也能马上同步到主机呢？很简单，把刚才的所有步骤在树莓派中再做一次，把那个python脚本里的ip地址和用户名都相应改一下就行了，在此就不细说了。&lt;/p&gt;

&lt;p&gt;需要注意的是树莓派中的python默认是没有gio这个模块的，得安装一下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install python-gobject
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外还要注意自己的主机有没有开启ssh服务，如果没有的话是不能从树莓派同步到主机上的。&lt;/p&gt;

&lt;p&gt;PS:unison可以实现双向同步，不过我没试过，反正rsync对我来说已经完全够用了，感兴趣的可以自己尝试。&lt;/p&gt;

&lt;h3 id=&#34;参考资料&#34;&gt;参考资料:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://heylinux.com/archives/817.html&#34;&gt;http://heylinux.com/archives/817.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/hechaoyuyu/article/details/6384418&#34;&gt;http://blog.csdn.net/hechaoyuyu/article/details/6384418&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description></item> 
    <item>
    <title>Raspberry Pi到手</title>
    <link>http://www.jiazhoulvke.com/2012/12/29/189/</link>
    <pubDate>2012-12-29 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/12/29/189/</guid>
    <description>&lt;p&gt;Raspberry Pi（国人一般称之为树莓派）最近很火，我受不了诱惑也买了一个来折腾。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=190&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/12/psb1.jpeg&#34; alt=&#34;psb1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;树莓派非常小，显得很可爱。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=191&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/12/psb2.jpeg&#34; alt=&#34;psb2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;旁边的那些板子是用来装树莓派的箱子，是和树莓派一起买来的，那层黄色的纸都可以撕掉的。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=192&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/12/psb3.jpeg&#34; alt=&#34;psb3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装很简单，按照说明书用不了多久就可以搞定，最终一个小小的电脑就组装好了。&lt;/p&gt;

&lt;p&gt;树莓派除了一块板什么都没有，其他设备都需要另外购买。它用的电源要求电压是5V，电流是750-1000mA，我的手机xt910用的电源是5.1V850mA，正好用得上。它用SD卡来作为存储器，在亚马逊花几十块买了个8G的Sandisk class10 SD卡，在卡上装好raspbian（基于debian的定制发行版），插上网线连上路由器，再插上电源，树莓派成功运行！&lt;/p&gt;

&lt;p&gt;树莓派有hdmi接口，可以通过hdmi线输出到支持hdmi的显示器上，或者通过hdmi转vga输出到普通的显示器，不过我并不打算用它来放电影，所以没必要花这冤枉钱了，直接在台式机上通过ssh就能访问树莓派了。在路由器上找到树莓派所使用的ip（也可以在路由器上给它绑定一个静态的IP），通过 ssh pi@ip地址 连接到树莓派，然后输入密码raspberry，即可登陆。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=193&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/12/Screenshot-pi@raspberrypi-2.png&#34; alt=&#34;Screenshot-pi@raspberrypi: ~-2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;登陆后第一步应该是换个更新源，否则默认的源速度会让人发疯的。我目前用的是新加坡的源，有200K以上的速度：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /etc/apt/sources.list
deb http://mirror.nus.edu.sg/raspbian/raspbian wheezy main contrib non-free rpi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后就是用更新了：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其他的一些配置可以通过一个内置的工具raspi-config搞定：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo raspi-config
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/?attachment_id=194&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/12/Screenshot-pi@raspberrypi-.png&#34; alt=&#34;Screenshot-pi@raspberrypi: ~&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;树莓派的设置基本就搞定了，接下来就是各种折腾了，以后再说……&lt;/p&gt;
</description></item> 
    <item>
    <title>利用vim和wget下载google&#43;的相册</title>
    <link>http://www.jiazhoulvke.com/2012/11/28/e588a9e794a8vime5928cwgete4b88be8bdbdgooglee79a84e79bb8e5868c/</link>
    <pubDate>2012-11-28 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/11/28/e588a9e794a8vime5928cwgete4b88be8bdbdgooglee79a84e79bb8e5868c/</guid>
    <description>&lt;p&gt;先找到相册地址，比如 &lt;a href=&#34;https://plus.google.com/photos/113638836970166422741/albums/5812010190409709377&#34;&gt;https://plus.google.com/photos/113638836970166422741/albums/5812010190409709377&lt;/a&gt; ，里面很多妹子，很合我的胃口。&lt;/p&gt;

&lt;p&gt;右键查看源代码，复制到vim中（当然你也可以直接用wget下载网页）,然后执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:%s/&amp;quot;/\r/g
:sort u
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/^https.*jpg$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到第一个图片链接,在它上面一行按dgg，再按N，反向查找最后一个图片链接，在它下面一行按dG，即可得到所有图片的地址。&lt;/p&gt;

&lt;p&gt;由于留下的地址列表里包含两种缩略图，所以要删除缩略图，留下所有原图:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:g/w800-h800\//d
:g/s300-c\//d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将最后的结果保存：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:w c:\mm.list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;现在利用万能的wget批量下载。因为gfw的原因需要一个代理，我用的是goagent，在goagent已经运行的前提下输入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -i c:\mm.list -e http_proxy=127.0.0.1:8087 --no-check-certificate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后慢慢等它下载好就行了。一个vim的简单应用。&lt;/p&gt;
</description></item> 
    <item>
    <title>clink：加强window下的cmd</title>
    <link>http://www.jiazhoulvke.com/2012/09/19/clinkefbc9ae58aa0e5bcbawindowe4b88be79a84cmd/</link>
    <pubDate>2012-09-19 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/09/19/clinkefbc9ae58aa0e5bcbawindowe4b88be79a84cmd/</guid>
    <description>

&lt;p&gt;作为码农免不了要用用命令行。用惯了linux下的终端，再用window下的cmd，绝对会让人感到生不如死：复制、粘贴方式极其脑残，不能&amp;lt;Ctrl-U&amp;gt;删除一整行，不能&amp;lt;Alt-.&amp;gt;补全上次命令的最后参数,不能……&lt;/p&gt;

&lt;p&gt;这时有两个选择：一是装个类似于cygwin这样的模拟环境，二就是使用这次要介绍的神器——clink。&lt;/p&gt;

&lt;p&gt;项目地址： &lt;a href=&#34;https://code.google.com/p/clink/&#34;&gt;https://code.google.com/p/clink/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用方法很简单，直接下载安装即可，也就不多说了。&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Powerful Bash-like line editing from GNU&amp;rsquo;s Readline library. Read more on Readline&amp;rsquo;s keyboard shortcuts.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Superior path completion (TAB).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Paste from clipboard (Ctrl-V).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Support for the completion of executables/commands, and environment variables.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Undo/Redo (Ctrl-_ or Ctrl-X, Ctrl-U)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Improved command line history.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Persists across sessions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Searchable (Ctrl-R and Ctrl-S).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;History expansion (e.g. !!, !, and !$).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Scriptable completion using Lua.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description></item> 
    <item>
    <title>我的项目管理插件myproject</title>
    <link>http://www.jiazhoulvke.com/2012/06/28/e68891e79a84e9a1b9e79baee7aea1e79086e68f92e4bbb6myproject/</link>
    <pubDate>2012-06-28 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/06/28/e68891e79a84e9a1b9e79baee7aea1e79086e68f92e4bbb6myproject/</guid>
    <description>&lt;p&gt;发个我自己写的项目管理插件myproject，目前实现了针对项目手动/自动更新tags及cscope数据库、在项目中递归搜索等功能，自己用着还挺舒服的。&lt;/p&gt;

&lt;p&gt;项目地址:&lt;a href=&#34;https://github.com/jiazhoulvke/myproject&#34;&gt;https://github.com/jiazhoulvke/myproject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最开始的版本是纯vimscript的，受不了更新tags时老是弹出命令行窗口，所以改成了python的，用vim的应该都装了python，所以应该不算什么大问题。&lt;/p&gt;

&lt;p&gt;使用方法没project插件那么复杂,只要在项目的根目录下面放一个叫project.vim的文件就行了。该方法来源于这里：   &lt;a href=&#34;http://easwy.com/blog/archives/automatically_update_ctags_tag_cscope_database/#comment-10782&#34;&gt;http://easwy.com/blog/archives/automatically_update_ctags_tag_cscope_database/#comment-10782&lt;/a&gt; ，project.vim不仅仅是项目标识，同时也是项目的配置文件。&lt;/p&gt;

&lt;p&gt;在vim里cd到项目目录中，或者直接打开项目中的文件，然后用“:MPLoad”载入project.vim及tags、cscope数据库（假如存在的话）。&lt;/p&gt;

&lt;p&gt;用“:MPBuildTags”可以建立tags或cscope数据库&lt;/p&gt;

&lt;p&gt;用“:MPUpdateTags”更新当前文件的tags或cscope数据库&lt;/p&gt;

&lt;p&gt;用“:MPSearchInProject 字符串”在项目中递归搜索。grep可用的话会调用grep，否则使用内部的vimgrep。&lt;/p&gt;

&lt;p&gt;假如安装了NerdTree，可以用“:MPNERDTREE”直接打开项目根目录&lt;/p&gt;

&lt;p&gt;在vimrc里写上“let g:MP_Write_AutoUpdate = 1”就会在每次保存文件时自动更新tags，想临时禁用自动更新的话就输入“:let g:MP_Update_Enable = 0”&lt;/p&gt;

&lt;p&gt;一些用于配置的全局变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot; 项目文件名
let g:MyProjectFileName = &#39;project.vim&#39;
&amp;quot; 是否启用ctags
let g:MP_Ctags_Enable = 1
&amp;quot; 是否启用cscope
let g:MP_Cscope_Enable = 1
&amp;quot; 定义ctags的路径
let g:MP_Ctags_Path = &#39;ctags&#39;
&amp;quot; 定义cscope的路径
let g:MP_Cscope_Path = &#39;cscope&#39;
&amp;quot;设置grep的路径
&amp;quot; Tips: 如果是在windows下使用cygwin的grep的话，搜索结果中经常会出现警告，需要在系统中添加一个名叫CYGWIN，值为nodosfilewarning的环境变量
let g:MP_Grep_Path = &#39;grep&#39;
&amp;quot; 定义ctags参数,比如c++项目可以在project.vim中定义&amp;quot;--c++-kinds=+px&amp;quot;
let g:MP_Ctags_Opt = &#39;&#39;
&amp;quot; 在文件写入时是否自动更新tags
let g:MP_Write_AutoUpdate = 0
&amp;quot; 是否自动载入项目文件
let g:MP_Bufread_AutoLoad = 0
&amp;quot; 是否允许更新tags(适合临时设置禁用或启用)
let g:MP_Update_Enable = 1
&amp;quot; 是否允许载入tags(适合临时设置禁用或启用)
let g:MP_Load_Enable = 1
&amp;quot; 需要建立tags的文件后缀名(可以针对不同项目在各自的project.vim文件中定义)
let g:MP_Source_File_Ext_Name = &#39;c,h,cpp,vim,php,py&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更具体的使用方法就直接看代码吧，里面的注释还是蛮详细的。&lt;/p&gt;

&lt;p&gt;发一个我的配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let g:MP_Bufread_AutoLoad = 1
let g:MP_Source_File_Ext_Name = &#39;htm,js,c,h,cpp,vim,php,py,asp&#39;
map &amp;lt;f3&amp;gt; &amp;lt;esc&amp;gt;:MPSearchInProject &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt;&amp;lt;f5&amp;gt; &amp;lt;esc&amp;gt;:MPLoad&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt;&amp;lt;f6&amp;gt; &amp;lt;esc&amp;gt;:MPUpdateTags&amp;lt;cr&amp;gt;

if has(&amp;quot;cscope&amp;quot;)
    set cscopequickfix=s-,c-,d-,i-,t-,e-
    set cscopetagorder=0
    set cscopetag
    set nocscopeverbose
    nmap &amp;lt;C-@&amp;gt;s :cs find s &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;g :cs find g &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;c :cs find c &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;t :cs find t &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;e :cs find e &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;f :cs find f &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cfile&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;i :cs find i ^&amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cfile&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;$&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;d :cs find d &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
endif
&lt;/code&gt;&lt;/pre&gt;
</description></item> 
    <item>
    <title>用iptables防止暴力破解ftp密码</title>
    <link>http://www.jiazhoulvke.com/2012/05/08/e794a8iptablese998b2e6ada2e69ab4e58a9be7a0b4e8a7a3ftpe5af86e7a081/</link>
    <pubDate>2012-05-08 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/05/08/e794a8iptablese998b2e6ada2e69ab4e58a9be7a0b4e8a7a3ftpe5af86e7a081/</guid>
    <description>&lt;p&gt;最近一直有个傻逼黑客暴力破解公司的FTP服务器，虽然我有信心他50年内绝对猜不出密码，但看到日志里一大堆的登录信息还是挺烦的，于是便想用iptables屏蔽它，手工屏蔽肯定是不现实的，人家手上一堆的肉鸡呢，封完一个ip人家换一个ip就行了。解决方法就是写个脚本来分析系统日志，然后识别出属于暴利破解的ip，然后添加到iptables的屏蔽列表中。网上虽然有很多现成的脚本，但都是针对英文系统的，而我公司的系统里面日志是中文的，并不能匹配，只好稍加改变。
show代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
grep &amp;quot;pure-ftpd.*[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}.*WARNING&amp;quot; /var/log/messages | awk &#39;{print $5,$6}&#39; | sed &amp;quot;s/^.*pure-ftpd.*(.*@\(.*\)).*$/\1/g&amp;quot; | sort | uniq -c &amp;gt; /tmp/pureftpban.tmp
cat /tmp/pureftpban.tmp | while read line
do
    COUNT1=`echo ${line}|awk &#39;{print $1}&#39;`
    IP1=`echo ${line}|awk &#39;{print $2}&#39;`
    if [ $COUNT1 -gt 10 ] &amp;amp;&amp;amp; [ -z &amp;quot;`iptables -vnL INPUT|grep $IP1`&amp;quot; ]
    then
    iptables -I INPUT -s $IP1 -m state --state NEW,RELATED,ESTABLISHED -j DROP
    fi
done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上代码保存到/root/checksys.sh，并添加可执行权限。
然后用vim编辑/etc/crontab&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim /etc/crontab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*/3 * * * * root /root/checksys.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存并退出。系统就会每隔3分钟检测是否有人在暴力破解ftp密码，如果次数超过10次，就屏蔽之。
世界终于清静了……&lt;/p&gt;
</description></item> 
    <item>
    <title>手机通过wifi控制电脑上的foobar2000</title>
    <link>http://www.jiazhoulvke.com/2012/04/29/e6898be69cbae9809ae8bf87wifie68ea7e588b6e794b5e88491e4b88ae79a84foobar2000/</link>
    <pubDate>2012-04-29 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/04/29/e6898be69cbae9809ae8bf87wifie68ea7e588b6e794b5e88491e4b88ae79a84foobar2000/</guid>
    <description>&lt;p&gt;必须先感叹一句，GO语言太强了，自带的库很丰富，语法够简洁，即使没接触过GO，稍微学习一下就能用几十行代码做出个简单的web服务器。&lt;/p&gt;

&lt;p&gt;由于foobar2000可以通过命令行进行操作，比如:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foobar2000.exe /command:Next
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就是切换到下一曲。利用这个特性，就能很轻易的实现远程操控foobar2000。&lt;/p&gt;

&lt;p&gt;下面是GO语言的代码,文件名为foobar2k_web.go:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
    &amp;quot;os/exec&amp;quot;
    &amp;quot;fmt&amp;quot;
    &amp;quot;io&amp;quot;
    &amp;quot;net/http&amp;quot;
    &amp;quot;os&amp;quot;
)

var service_port   = &amp;quot;:9527&amp;quot;
var service_path  = &amp;quot;/foobar2k&amp;quot;
var foobar2k_path = &amp;quot;d:\\bin\\foobar2000\\foobar2000.exe&amp;quot;
var fbcmd_map     = map[string]string{&amp;quot;prev&amp;quot;:&amp;quot;Previous&amp;quot;,&amp;quot;next&amp;quot;:&amp;quot;Next&amp;quot;,&amp;quot;vdown&amp;quot;:&amp;quot;Down&amp;quot;,&amp;quot;vup&amp;quot;:&amp;quot;Up&amp;quot;,&amp;quot;playpause&amp;quot;:&amp;quot;Play or pause&amp;quot;}

func FB2KServer(w http.ResponseWriter, req  *http.Request) {
    io.WriteString(w, &amp;quot;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;style type=&amp;quot;\&amp;amp;quot;text/css\&amp;amp;quot;&amp;quot;&amp;gt;div.bt {width:100px;height:100px;float:left;text-align:center;line-height:100px;background-color:green;}div.bt a{font-size:72px;color:white;font-weight:bold;text-decoration:none;}&amp;lt;/style&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;div style=&amp;quot;\&amp;amp;quot;width:500px;height:100px;margin:100px&amp;quot; auto;\&amp;quot;=&amp;quot;&amp;quot;&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;div class=&amp;quot;\&amp;amp;quot;bt\&amp;amp;quot;&amp;quot;&amp;gt;&amp;lt;a target=&amp;quot;\&amp;amp;quot;_self\&amp;amp;quot;&amp;quot; href=&amp;quot;\&amp;amp;quot;&amp;amp;quot;+service_path+&amp;amp;quot;?fbcmd=prev\&amp;amp;quot;&amp;quot;&amp;gt;《&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;div class=&amp;quot;\&amp;amp;quot;bt\&amp;amp;quot;&amp;quot;&amp;gt;&amp;lt;a target=&amp;quot;\&amp;amp;quot;_self\&amp;amp;quot;&amp;quot; href=&amp;quot;\&amp;amp;quot;&amp;amp;quot;+service_path+&amp;amp;quot;?fbcmd=next\&amp;amp;quot;&amp;quot;&amp;gt;》&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;div class=&amp;quot;\&amp;amp;quot;bt\&amp;amp;quot;&amp;quot;&amp;gt;&amp;lt;a target=&amp;quot;\&amp;amp;quot;_self\&amp;amp;quot;&amp;quot; href=&amp;quot;\&amp;amp;quot;&amp;amp;quot;+service_path+&amp;amp;quot;?fbcmd=playpause\&amp;amp;quot;&amp;quot;&amp;gt;||&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;div class=&amp;quot;\&amp;amp;quot;bt\&amp;amp;quot;&amp;quot;&amp;gt;&amp;lt;a target=&amp;quot;\&amp;amp;quot;_self\&amp;amp;quot;&amp;quot; href=&amp;quot;\&amp;amp;quot;&amp;amp;quot;+service_path+&amp;amp;quot;?fbcmd=vdown\&amp;amp;quot;&amp;quot;&amp;gt;◣&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;div class=&amp;quot;\&amp;amp;quot;bt\&amp;amp;quot;&amp;quot;&amp;gt;&amp;lt;a target=&amp;quot;\&amp;amp;quot;_self\&amp;amp;quot;&amp;quot; href=&amp;quot;\&amp;amp;quot;&amp;amp;quot;+service_path+&amp;amp;quot;?fbcmd=vup\&amp;amp;quot;&amp;quot;&amp;gt;◢&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;lt;/div&amp;gt;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;quot;)
    io.WriteString(w, &amp;quot;&amp;quot;)
    var fbcmd = req.FormValue(&amp;quot;fbcmd&amp;quot;)
    cmd := exec.Command(foobar2k_path,&amp;quot;/command:&amp;quot;+fbcmd_map[fbcmd])
    cmd.Start()
}

func main() {
    http.HandleFunc(service_path,FB2KServer)
    fmt.Printf(&amp;quot;started!&amp;quot;);
    err := http.ListenAndServe(service_port ,nil)
    if err != nil {
        fmt.Printf(&amp;quot;ERR:=%s\n&amp;quot;,err)
        os.Exit(-1)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中service_port定义的是端口号，service_path定义的是服务的路径，foobar2k_path定义的是foobar2000在电脑上的绝对路径,fbcmd_map定义的是foobar2000支持的操作命令，这里只定义了下一曲、上一曲、播放/暂停等常用命令。&lt;/p&gt;

&lt;p&gt;用go编译后生成foobar2k_web.exe,双击运行后会弹出个控制台窗口，显示”started!”。&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;opacity: 1;&#34; lazyloadpass=&#34;1&#34; title=&#34;foobar2k_web.JPG&#34; src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/04/foobar2k_web.jpg&#34; file=&#34;/static/wp-content/uploads/2012/04/foobar2k_web.jpg&#34; class=&#34;aligncenter lh_lazyimg&#34;&gt;&lt;noscript&gt;&lt;img title=&#34;foobar2k_web.JPG&#34; src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/04/foobar2k_web.jpg&#34; class=&#34;aligncenter&#34; /&gt;&lt;/noscript&gt;&lt;/p&gt;

&lt;p&gt;然后用手机连接wifi，访问 http://电脑端的ip:端口号/路径 ,比如我的电脑端的ip地址是192.168.1.3,定义的端口号是9527,定义的路径是/foobar2k，那么就可以访问 &lt;a href=&#34;http://192.168.1.3:9527/foobar2k&#34;&gt;http://192.168.1.3:9527/foobar2k&lt;/a&gt; ，不出意外的话在手机上就能看到如下界面：&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;opacity: 1;&#34; lazyloadpass=&#34;1&#34; title=&#34;foobar2k_web_phone.png&#34; src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/04/foobar2k_web_phone.png&#34; file=&#34;/static/wp-content/uploads/2012/04/foobar2k_web_phone.png&#34; class=&#34;aligncenter lh_lazyimg&#34;&gt;&lt;noscript&gt;&lt;img title=&#34;foobar2k_web_phone.png&#34; src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/04/foobar2k_web_phone.png&#34; class=&#34;aligncenter&#34; /&gt;&lt;/noscript&gt;&lt;/p&gt;

&lt;p&gt;点击手机上的按钮，foobar2000就会做出相应动作，假如foobar2000还没有启动的话，则会自动启动。&lt;/p&gt;

&lt;p&gt;目前的程序功能还很简陋，要好用点还得再完善一下，比如定义的端口号、foobar2000路径都放到配置文件里，操作界面美化等。&lt;/p&gt;
</description></item> 
    <item>
    <title>vim的Google翻译插件</title>
    <link>http://www.jiazhoulvke.com/2012/04/14/vime79a84googlee7bfbbe8af91e68f92e4bbb6/</link>
    <pubDate>2012-04-14 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/04/14/vime79a84googlee7bfbbe8af91e68f92e4bbb6/</guid>
    <description>&lt;p&gt;由于经常需要在vim里看一些英文帮助文档，又没有长年累月的运行一个翻译软件的习惯，所以还是写了个插件来搞定,用了python，所以windows下得确保安装了python。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/04/i1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;使用方法有几种：&lt;/p&gt;

&lt;p&gt;1.将光标移动到需要翻译的英文单词上，按&amp;lt;leader&amp;gt;e2c(把中文翻译成英文就是&amp;lt;leader&amp;gt;c2e，下面就不多说了)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2012/04/i2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.选中需要翻译的英文，按&amp;lt;leader&amp;gt;e2c。&lt;/p&gt;

&lt;p&gt;3.输入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:E2C 想要翻译的英文
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;优点：因为是调用Google进行翻译，所以Google能翻译多少种语言，插件就能翻译多少种语言，不过默认只map了英译中和中译英的快捷键，其他的得自己定义了。&lt;/p&gt;

&lt;p&gt;缺点：连不了网就死翘翘了。&lt;/p&gt;

&lt;p&gt;快捷键定义方法举例:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;e2c :echo Google_Translate(&#39;en&#39;,&#39;zh-CN&#39;,expand(&#39;&amp;lt;cword&amp;gt;&#39;))&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;en是原文的语言，zh-CN是要翻译的语言。&lt;/p&gt;

&lt;p&gt;下载地址:&lt;a href=&#34;http://code.google.com/p/jiazhoulvke/downloads/detail?name=googletranslate.vim&#34;&gt;http://code.google.com/p/jiazhoulvke/downloads/detail?name=googletranslate.vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;代码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot; googletranslate.vim: 利用Google翻译在vim中进行翻译
&amp;quot; Author:       jiazhoulvke
&amp;quot; Blog:         http://jiazhoulvke.com
&amp;quot; Date:         2012-4-10
&amp;quot; Version:      1.0
&amp;quot;-------------------------------------------------
&amp;quot; Google_Translate: 谷歌翻译
function! Google_Translate(lan1,lan2,word)
python &amp;lt;&amp;lt; EOM
#coding=utf-8
import vim,urllib,urllib2
word = vim.eval(&amp;quot;a:word&amp;quot;)
word=word.replace(&#39;\n&#39;,&#39;&#39;)
rword = urllib.urlencode({&#39;text&#39;:word})
lan1 = vim.eval(&amp;quot;a:lan1&amp;quot;)
lan2 = vim.eval(&amp;quot;a:lan2&amp;quot;)
headers = {
    &#39;User-Agent&#39;:&#39;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.15 Safari/536.5&#39;
}
url = &#39;http://translate.google.com/translate_a/t?client=firefox-a&amp;amp;langpair;=&#39;+lan1+&#39;%7c&#39;+lan2+&#39;&amp;amp;ie;=UTF-8&amp;amp;oe;=UTF-8&amp;amp;&#39;+rword
req = urllib2.Request(
    url = url,
    headers = headers
)
resultstr=&#39;&#39;
gtresult = urllib2.urlopen(req)
if gtresult.getcode()==200:
    gtresultstr=gtresult.read()
    po=eval(gtresultstr)
    resultstr=&#39;&#39;
    for poi in po[&#39;sentences&#39;]:
        resultstr+=poi[&#39;trans&#39;]
    if po.has_key(&#39;dict&#39;):
        if len(po[&#39;dict&#39;])&amp;gt;0:
            if po[&#39;dict&#39;][0].has_key(&#39;terms&#39;):
                tr=&#39;,&#39;.join(po[&#39;dict&#39;][0][&#39;terms&#39;])
                resultstr+=&#39;\n&#39;+word+&#39;:&#39;+tr
vim.command(&#39;let resultstr = &amp;quot;%s&amp;quot;&#39; % resultstr)
EOM
return resultstr
endfunction

&amp;quot;-------------------------------------------------
&amp;quot; Google_Translate_Selected_String: 翻译选中文本
function! Google_Translate_Selected_String(lan1,lan2)
    normal `&amp;lt;
    normal v
    normal `&amp;gt;
    silent normal &amp;quot;ty
    return Google_Translate(a:lan1,a:lan2,@t)
endfunction

&amp;quot;-------------------------------------------------
&amp;quot; Key_and_command_bind: 按键及命令绑定
if !hasmapto(&#39;&amp;lt;leader&amp;gt;e2c&#39;,&#39;n&#39;)
    nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;e2c :echo Google_Translate(&#39;en&#39;,&#39;zh-CN&#39;,expand(&#39;&amp;lt;cword&amp;gt;&#39;))&amp;lt;cr&amp;gt;
endif
if !hasmapto(&#39;&amp;lt;leader&amp;gt;c2e&#39;,&#39;n&#39;)
    nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;c2e :echo Google_Translate(&#39;zh-CN&#39;,&#39;en&#39;,expand(&#39;&amp;lt;cword&amp;gt;&#39;))&amp;lt;cr&amp;gt;
endif
if !hasmapto(&#39;&amp;lt;leader&amp;gt;e2c&#39;,&#39;v&#39;)
    vmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;e2c &amp;lt;esc&amp;gt;:echo Google_Translate_Selected_String(&#39;en&#39;,&#39;zh-CN&#39;)&amp;lt;cr&amp;gt;
endif
if !hasmapto(&#39;&amp;lt;leader&amp;gt;c2e&#39;,&#39;v&#39;)
    vmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;c2e &amp;lt;esc&amp;gt;:echo Google_Translate_Selected_String(&#39;zh-CN&#39;,&#39;en&#39;)&amp;lt;cr&amp;gt;
endif
if !exists(&amp;quot;:E2C&amp;quot;)
    command! -nargs=+ E2C :echo Google_Translate(&amp;quot;en&amp;quot;,&amp;quot;zh-CN&amp;quot;,&amp;lt;q-args&amp;gt;)
endif
if !exists(&amp;quot;:C2E&amp;quot;)
    command! -nargs=+ C2E :echo Google_Translate(&amp;quot;zh-CN&amp;quot;,&amp;quot;en&amp;quot;,&amp;lt;q-args&amp;gt;)
endif
&amp;quot;-------------------------------------------------
&amp;quot; Modelines: 
&amp;quot; vim: ts=4 nowrap fdm=marker foldcolumn=1 ft=vim
&lt;/code&gt;&lt;/pre&gt;
</description></item> 
    <item>
    <title>关于vim显示的问题</title>
    <link>http://www.jiazhoulvke.com/2012/03/13/e585b3e4ba8evime698bee7a4bae79a84e997aee9a298/</link>
    <pubDate>2012-03-13 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/03/13/e585b3e4ba8evime698bee7a4bae79a84e997aee9a298/</guid>
    <description>

&lt;h3 id=&#34;一-过长的行显示不全&#34;&gt;一、过长的行显示不全&lt;/h3&gt;

&lt;p&gt;当一行字过长时，vim总是无法正常显示，会显示很多“@”符号，很久以前我以为是vim的一个bug，后来问了高手才知道是设置问题，在配置文件里面加上一句&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set display=lastline
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;问题就解决了。&lt;/p&gt;

&lt;h3 id=&#34;二-代码高亮不正常&#34;&gt;二、代码高亮不正常&lt;/h3&gt;

&lt;p&gt;当一个文件里的代码很长时，往往会出现这种问题：当你移动光标查看代码时，本来高亮显示的代码全部变成白色，严重影响阅读。滚动一下光标到上一页，又突然正常了，又是vim默认设置的问题。这个在帮助文档里有说明，输入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:h 06.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看最后一段：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在自下往上滚屏的过程中颜色显示不对。
Vim 在分析文本的时候不对整个文件进行处理，它只分析你要显示的部分。这
样能省不少时间，但也会因此带来错误。一个简单的修正方法是敲 CTRL-L。
或者往回滚动一下再回来。要彻底解决这个问题，请参见 |:syn-sync|。有些
语法定义文件有办法自己找到前面的内容，这可以参见相应的语法定义文件。
例如，|tex.vim| 中可以查到 Tex 语法定义。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下面这句就能解决:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;syntax sync fromstart
&lt;/code&gt;&lt;/pre&gt;
</description></item> 
    <item>
    <title>关于pathogen安装vba包的问题</title>
    <link>http://www.jiazhoulvke.com/2012/01/06/e585b3e4ba8epathogene5ae89e8a385vbae58c85e79a84e997aee9a298/</link>
    <pubDate>2012-01-06 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/01/06/e585b3e4ba8epathogene5ae89e8a385vbae58c85e79a84e997aee9a298/</guid>
    <description>&lt;p&gt;在之前的&lt;a href=&#34;http://jiazhoulvke.com/?p=100&#34;&gt;一篇文章&lt;/a&gt;中我推荐了几款vim比较实用的插件，其中第一款就是pathogen，是的，虽然只有短短两百来行的代码，但就像我给它的评分一样：Life Changing。&lt;/p&gt;

&lt;p&gt;为了解决文件混乱的问题vim搞出了vba这种格式，想法很好，但实际应用中效果却不能尽如人意。因为并非所有的插件发布者都会把插件打包成vba格式，很多都只是简单的压缩成zip或者tar.gz之类的压缩包，假如插件只有一个vim文件的话连压缩都不用了……&lt;/p&gt;

&lt;p&gt;而使用pathogen的话，则每个插件都会拥有一个自己的文件夹，这样要删除某个插件直接找到这个插件所在的文件夹，然后删掉它就行了。&lt;/p&gt;

&lt;p&gt;好吧，前面说了一大堆废话来凑字数，就是为了引出下面的正题。&lt;/p&gt;

&lt;p&gt;现在很多插件都只发布vba包，之前我不知道该怎么解压，用了一种很二的方法：先按照正常的方法安装这个vba包，然后在bundle目录里新建一个目录，再把刚才安装的那些文件移进去……我忘了有伟大的&amp;rdquo;:h&amp;rdquo;。……&lt;/p&gt;

&lt;p&gt;用&amp;rdquo;:h vba&amp;rdquo;可以看到相关帮助，其实只需要几步就能安装：&lt;/p&gt;

&lt;p&gt;1.先创建相应的文件夹。其中的plugin_name是实际的插件名&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/.vim/bundle/plugin_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.用vim打开需要安装的vba包。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim someplugin.vba
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.在vim中执行下面的代码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:UseVimball ~/.vim/bundle/plugin_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作为一个蛋疼得必须要治的人，我写了小插件，貌似会更方便一点：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;--------------------------------------------------
&amp;quot; pathogen_install_vba.vim
&amp;quot; Author:       jiazhoulvke
&amp;quot; Email:        jiazhoulvke [AT] gmail.com
&amp;quot; Blog:         http://jiazhoulvke.com
&amp;quot; Version:      0.1
&amp;quot;--------------------------------------------------

if &amp;amp;cp; || exists(&amp;quot;g:loaded_pathogen_install_vba&amp;quot;)
    finish
endif
let g:loaded_pathogen_install_vba=&amp;quot;v0.1&amp;quot;

command! PathogenInstallVBA :call Pathogen_Install_VBA()

function! Pathogen_Install_VBA()
    let jzlk_extname=expand(&amp;quot;%:e&amp;quot;)
    if jzlk_extname!=&amp;quot;vba&amp;quot;
        echo &#39;这个文件不是vba安装包哦。&#39;
    else
        let vba_dir_name=input(&amp;quot;插件文件夹名: &amp;quot;)
        if has(&amp;quot;win32&amp;quot;)
            let vba_dir_path=$VIM . &amp;quot;\\vimfiles\\bundle\\&amp;quot; . vba_dir_name
            call system(&amp;quot;md &amp;quot; . vba_dir_path)
        else
            let vba_dir_path=&amp;quot;~/.vim/bundle/&amp;quot; . vba_dir_name
            call system(&amp;quot;mkdir &amp;quot;. vba_dir_path)
        endif
        execute &#39;UseVimball &#39; . vba_dir_path
    endif
endfunction
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装这个插件，然后以后碰到vba格式的插件，载入后vim里输入:PathogenInstallVBA,会提示输入文件夹名，输入后回车，OK。&lt;/p&gt;
</description></item> 
    <item>
    <title>Vim插件推荐</title>
    <link>http://www.jiazhoulvke.com/2011/07/05/vime68f92e4bbb6e68ea8e88d90/</link>
    <pubDate>2011-07-05 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/07/05/vime68f92e4bbb6e68ea8e88d90/</guid>
    <description>&lt;p&gt;1.pathogen(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2332&#34;&gt;http://www.vim.org/scripts/script.php?script_id=2332&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;pathogen是用来管理插件的插件。vim的插件是混在一起的，这在插件少的时候没什么问题，但当插件数量达到两位数时，问题就出来了——当我们下载试用某个插件，发现并不适合自己或者此插件和自己原来的插件有某些冲突时，你会发现很难清理掉刚刚安装的插件，因为有的插件有多达上百个文件，分布在不同的文件夹中。如果此插件是个vba包，那倒没什么问题，它可以像你在系统里安装的软件一样，通过一句命令清除掉,但问题是有些插件就是一个压缩包而已，并没有安装记录。这时pathogen就派上用场了，它会把每个插件放到各自的文件夹中，不需要用的时候直接删掉这个文件夹就行了，实在是很方便。&lt;/p&gt;

&lt;p&gt;2.fencview(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1708&#34;&gt;http://www.vim.org/scripts/script.php?script_id=1708&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;这个插件的功能就是识别文件编码，对国人来说很有用。安装后可以在菜单项里找到识别编码的选项，不过用vim到一定程度的人，应该都不会还保留着菜单栏的吧？我的vimrc里加了一句:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap &amp;lt;leader&amp;gt;fenc &amp;lt;esc&amp;gt;:FencAutoDetect&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要识别的时候通过快捷键就能识别了。还可以设置自动识别编码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let g:fencview_auto_patterns=&#39;*.txt,*.htm{l\=},*.php,*.c,*.py&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.neocomplcache(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2620&#34;&gt;http://www.vim.org/scripts/script.php?script_id=2620&lt;/a&gt;)
vim的补全插件里我最喜欢的一个。不像其他补全插件实时查找，而是在缓存中查找，用起来感觉很快。我的配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let g:neocomplcache_enable_at_startup=1
let g:neocomplcache_enable_smart_case=1
let g:neocomplcache_enable_camel_case_completion=1
let g:neocomplcache_enable_underbar_completion=1
let g:neocomplcache_min_syntax_length=3
let g:neocomplcache_manual_completion_start_length=3
let g:neocomplcache_enable_ignore_case=1
let g:neocomplcache_lock_buffer_name_pattern=&#39;\*ku\*&#39;
let g:neocomplcache_max_list=100
let g:neocomplcache_enable_auto_select = 1
imap &amp;lt;expr&amp;gt;&amp;lt;c-y&amp;gt; neocomplcache#close_popup()
imap &amp;lt;expr&amp;gt;&amp;lt;c-e&amp;gt; neocomplcache#cancel_popup()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.taglist(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=273&#34;&gt;http://www.vim.org/scripts/script.php?script_id=273&lt;/a&gt;)
类似于一些IDE，会在左边显示一个函数、变量列表(当然通过配置也可以显示在右边)，需要跳转到指定的函数时直接在函数名上面按回车即可。此插件需要ctags的支持。
我的配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    map &amp;lt;silent&amp;gt;&amp;lt;f6&amp;gt; &amp;lt;esc&amp;gt;:TlistToggle&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.nerdtree(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1658&#34;&gt;http://www.vim.org/scripts/script.php?script_id=1658&lt;/a&gt;)
vim里的文件管理器,以前我用的是winmanager，但这个nerdtree更好用。
我的配置:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap &amp;lt;silent&amp;gt;&amp;lt;f8&amp;gt; &amp;lt;esc&amp;gt;:NERDTreeToggle&amp;lt;cr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6.tabbar(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1338&#34;&gt;http://www.vim.org/scripts/script.php?script_id=1338&lt;/a&gt;)
类似于以前常用的minibufexpl，可以在顶部显示出已打开的buffer的列表，就像现在浏览器上的标签栏一样。tabbar比起minibufexpl更强大的功能是，它可以通过alt+数字直接在各个buffer中切换，还可以通过ctrl+tab轮换。&lt;/p&gt;

&lt;p&gt;7.mark(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2666&#34;&gt;http://www.vim.org/scripts/script.php?script_id=2666&lt;/a&gt;,旧版:&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1238&#34;&gt;http://www.vim.org/scripts/script.php?script_id=1238&lt;/a&gt;)
此插件的功能很简单，将光标移动到你需要高亮显示的关键字上面,比如test，按下&amp;lt;leader&amp;gt;m，则该文件中的所有test都会高亮显示。也许你会说，vim搜索的时候不是也可以高亮吗？是的，但是它只能高亮一个关键字，而mark可以同时高亮多个关键字，并且每个关键字都有不同的颜色(当你标记的关键字多的时候看起来非常漂亮)，这在阅读一些代码时非常好用。&lt;/p&gt;

&lt;p&gt;8.project(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=69&#34;&gt;http://www.vim.org/scripts/script.php?script_id=69&lt;/a&gt;)
用来管理项目的插件。手头有一些比较大的项目需要管理时，这个插件就显得非常有用。&lt;/p&gt;

&lt;p&gt;9.zencoding(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=2981&#34;&gt;http://www.vim.org/scripts/script.php?script_id=2981&lt;/a&gt;)
一个可以快速编写html代码的插件。比如输入 html:xt ,然后按 &amp;lt;C-y&amp;gt;, ，就会生成一大段的html代码，类似于snip,但在某些方面来说比snip更灵活更智能一点，具体不太好说，要用过才能体会。&lt;/p&gt;

&lt;p&gt;10.vimpress(&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=3510&#34;&gt;http://www.vim.org/scripts/script.php?script_id=3510&lt;/a&gt;,旧版:&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=1953&#34;&gt;http://www.vim.org/scripts/script.php?script_id=1953&lt;/a&gt;)
直接在vim里发表、管理你的wordpress博客&lt;/p&gt;
</description></item> 
    <item>
    <title>解决了一个很纠结的Vim按键映射问题</title>
    <link>http://www.jiazhoulvke.com/2011/06/16/e8a7a3e586b3e4ba86e4b880e4b8aae5be88e7baa0e7bb93e79a84vime68c89e994aee698a0e5b084e997aee9a298/</link>
    <pubDate>2011-06-16 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/06/16/e8a7a3e586b3e4ba86e4b880e4b8aae5be88e7baa0e7bb93e79a84vime68c89e994aee698a0e5b084e997aee9a298/</guid>
    <description>&lt;p&gt;vim里默认的复制粘贴系统剪贴板内容的按键非常的蛋疼，&amp;rdquo;+y(复制)和&amp;rdquo;+gP(粘贴)这种按键，光看就觉得别扭，于是一些人就把默认的剪贴板设置为系统剪贴板，有些人则是直接导入vim自带的那个windows按键配置文件，我以前也是一直用这个办法，但很快发现了一个弊端：C-V是用来进入列选择模式的，虽然可以用C-Q代替，但如果使用终端下的vim的话，C-Q通常是不起作用的（在vim输入:h ctrl-Q有解释）。于是我尝试着用&amp;lt;leader&amp;gt;vv这样的组合键来代替C-V，但用了一段时间，连我自己都受不了了，最终还是改回了C-V。然后突然想到，终端里不能按C-Q，那就给它映射个别的按键呗，于是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nmap vv &amp;lt;C-Q&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;脑袋总算转过弯了……&lt;/p&gt;
</description></item> 
    <item>
    <title>vim用的图片热点链接生成工具</title>
    <link>http://www.jiazhoulvke.com/2011/05/11/vime794a8e79a84e59bbee78987e783ade782b9e993bee68ea5e7949fe68890e5b7a5e585b7/</link>
    <pubDate>2011-05-11 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/05/11/vime794a8e79a84e59bbee78987e783ade782b9e993bee68ea5e7949fe68890e5b7a5e585b7/</guid>
    <description>&lt;p&gt;上次的vim调色板给我很大的启发，利用这种调用图形程序的方式，完全可以将很多原本不能或者很难实现的功能轻易实现，比如这次我需要做一个图片的热点链接（就是在一张图片上划分出N块区域，每块区域都能使用不同的链接），当然不可能还在vim里手工写坐标，那也太逆天了，所以只好无奈的打开N年没用过Dreamweaver，这让我心有不甘，太不装B了！而且Dreamweaver的启动速度也慢得让人蛋疼。这就是我写这个小程序的原因。&lt;/p&gt;

&lt;p&gt;本来是想用gtk开发，无奈目前gtk还刚刚入门呢，所以先用我相对比较拿手的C#来开发（开发工具是vs2008 express），等以后再写个gtk版的。&lt;/p&gt;

&lt;p&gt;c#的代码比较分散，就不贴上来了，程序和源文件我都打包传到了&lt;a href=&#34;http://jiazhoulvke.googlecode.com&#34;&gt;我的googlecode&lt;/a&gt;上。直接下载链接：&lt;a href=&#34;http://jiazhoulvke.googlecode.com/files/ImageMap%20for%20vim.7z&#34;&gt;http://jiazhoulvke.googlecode.com/files/ImageMap%20for%20vim.7z&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载，解压，复制imagemap.vim到vim的plugin文件夹中，复制imagemap.exe到gvim.exe所在的目录（或者复制到windows系统文件夹下，如c:\windows）,确保已经安装了蛋疼的.net framework（程序用的版本是2.0），在一个空行里输入一个图片名称，必须是有效的，然后在插入模式下按Alt+M(要改快捷键可以到imagemap.vim中改最后一行的代码)，只要图片路径正确，会弹出一个窗口，直接用鼠标拖选一块区域，然后输入链接的属性，就成功添加了一个热点，添加了所有的热点后直接点关闭按钮，生成的代码就出现在vim里了。&lt;/p&gt;

&lt;p&gt;下面是截图:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jiazhoulvke.com/?attachment_id=85&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2011/05/11.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jiazhoulvke.com/?attachment_id=86&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2011/05/2.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jiazhoulvke.com/?attachment_id=87&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2011/05/3.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jiazhoulvke.com/?attachment_id=88&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2011/05/4.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>vim里的调色板</title>
    <link>http://www.jiazhoulvke.com/2011/04/09/vime9878ce79a84e8b083e889b2e69dbf/</link>
    <pubDate>2011-04-09 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/04/09/vime9878ce79a84e8b083e889b2e69dbf/</guid>
    <description>&lt;p&gt;今天无意中看到了一篇文章《&lt;a href=&#34;http://lilydjwg.is-programmer.com/posts/21636.html&#34;&gt;colorpicker: 给 Vim 加一个调色板！&lt;/a&gt;》，才知道原来vim里也能调用调色板，唉，火星了。&lt;/p&gt;

&lt;p&gt;colorpicker需要一段vim代码和一个gtk程序的配合，作者给出了gtk程序的代码，但没有windows下的可执行程序，正好我前不久刚刚搭建了一个windows下的gtk开发环境，于是就派上用场啦。写了一个makefile，一次性编译通过，嘿嘿！&lt;/p&gt;

&lt;p&gt;文件下载地址:
googlecode:&lt;a href=&#34;http://jiazhoulvke.googlecode.com/files/colorpicker_for_vim.7z&#34;&gt;http://jiazhoulvke.googlecode.com/files/colorpicker_for_vim.7z&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;压缩包下载下来后，解压，将plugin文件夹里的colorpicker.vim复制到vim里的相应目录中，再把colorpicker文件夹中的colorpicker.exe复制到系统目录中，比如c:\windows。不过我比较喜欢把程序放到vim的安装目录里面，比如c:\program files\vim\vim73，vim一样可以访问到，而且更加绿色环保。&lt;/p&gt;

&lt;p&gt;现在一切搞定了，打开vim，按Alt+C，就会弹出一个调色板了，hoho～～&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jiazhoulvke.com/?attachment_id=71&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/static/wp-content/uploads/2011/04/colorpicker.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;update:回去看了一下依云同学（colorpicker作者）博客的更新，才想起用windows的人基本都没装过gtk运行库的，失策啊，没这玩意是用不了colorpicker，赶紧的，去下载个gtk运行库吧！&lt;a href=&#34;http://gtk-win.sourceforge.net&#34;&gt;http://gtk-win.sourceforge.net&lt;/a&gt;&lt;/p&gt;
</description></item> 
    <item>
    <title>windows下配置gtk开发环境(含vim配置)</title>
    <link>http://www.jiazhoulvke.com/2011/03/30/windowse4b88be9858de7bdaegtke5bc80e58f91e78eafe5a283e590abvime9858de7bdae/</link>
    <pubDate>2011-03-30 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/03/30/windowse4b88be9858de7bdaegtke5bc80e58f91e78eafe5a283e590abvime9858de7bdae/</guid>
    <description>&lt;p&gt;突然又有了自学C的冲动，决定把遗忘已久的C重新学一遍，不过这次不准备再停留在写些控制台程序的程度，要写一些图形界面的东西了。对我来说，写gui程序当然首选gtk，跨平台，写个程序稍微改一下基本就能在windows和linux下运行了。&lt;/p&gt;

&lt;p&gt;学gtk，用linux是最方便的，可惜由于目前条件所限，已经很久没用心爱的ubuntu了，只好先在windows下将就下了。&lt;/p&gt;

&lt;p&gt;Google了一下，发现在windows下想要搭建个gtk的开发环境还真是够复杂的，神马gcc、make、gtk运行库都得自己一个个下载来然后安装配置，而在ubuntu下，一句apt-get命令足矣～&lt;/p&gt;

&lt;p&gt;看过好几篇文章，发现&lt;a href=&#34;http://justforfun.blog.techweb.com.cn/archives/58.html&#34;&gt;这篇文章&lt;/a&gt;(&lt;a href=&#34;http://justforfun.blog.techweb.com.cn/archives/58.html)里的做法相对来说要简单一些，只需要下载一个dev-cpp和一个gtk&#34;&gt;http://justforfun.blog.techweb.com.cn/archives/58.html)里的做法相对来说要简单一些，只需要下载一个dev-cpp和一个gtk&lt;/a&gt; for windows的开发包即可。我在很久之前自学C时用的就是dev-cpp，它确实是个很不错的开发工具，非常小巧，只有几M，很适合用来学习，而微软的VS…，几G的体积确实够吓人的，对于初学者来说也完全没必要装这么大个玩意。呃，扯远了，回正题。&lt;/p&gt;

&lt;p&gt;按照上面的那篇文章，很快就搭建好了一个gtk开发环境，本来到这一步就可以结束了，但谁叫我是个蛋疼的vim控呢？接下来就配置一下，让vim也能轻松的开发gtk程序。&lt;/p&gt;

&lt;p&gt;先修改一下环境变量，把dev-cpp安装目录下的bin目录添加到path环境变量中，比如我的dev-cpp装在c盘根目录，目录的地址是“C:\Dev-Cpp\bin”，这样不需要写完整路径就能在命令行下访问bin目录下的make、gcc程序了。&lt;/p&gt;

&lt;p&gt;用vim的基本上都会用taglist这个插件的吧？用taglist的话，基本上都已经装了ctags了（没有的话google下），先在控制台里运行这句命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ctags -R --c++-kinds=+p --fields=+iaS --extra=+q C:\dev-cpp\include
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将生成的tags文件改名为c.tags，再运行这句命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ctags -R --c++-kinds=+p --fields=+iaS --extra=+q C:\gtk\include
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将生成的tags改名为gtk.tags。然后在vim的安装目录的vim7x(用vim7.2的话x就是2，用vim7.3的话x就是3)目录下新建一个文件夹，名字叫做tagfiles,将之前生成的两个tags文件都复制到这个文件夹下，然后打开_vimrc配置文件，加入以下代码:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;autocmd! BufRead *.c set tags+=$VIMRUNTIME/tagfiles/c.tags,$VIMRUNTIME/tagfiles/gtk.tags
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样编辑c语言文件的时候就可以补全函数了。&lt;/p&gt;

&lt;p&gt;接下来写一个简单的gtk文件测试一下。&lt;/p&gt;

&lt;p&gt;将以下内容保存为test.c：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;gtk/gtk.h&amp;gt;  
int main(int argc, char *argv[])  
{  
    GtkWidget *window;  
    gtk_init(&amp;amp;argc, &amp;amp;argv);  
    window = gtk_window_new(GTK_WINDOW_TOPLEVEL);  
    gtk_window_set_title(GTK_WINDOW(window), “Hello World”);  
    gtk_widget_show(window);  
    gtk_main();  
    return 0 ;  
}  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再写个makefile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gtk_include=-IC:/GTK/INCLUDE/LIBXML2 -IC:/GTK/INCLUDE/LIBGLADE-2.0 -IC:/GTK/LIB/GTKGLEXT-1.0/INCLUDE -IC:/GTK/LIB/GLIB-2.0/INCLUDE -IC:/GTK/LIB/GTK-2.0/INCLUDE -IC:/GTK/INCLUDE/GTKGLEXT-1.0 -IC:/GTK/INCLUDE/ATK-1.0 -IC:/GTK/INCLUDE/CAIRO -IC:/GTK/INCLUDE/PANGO-1.0 -IC:/GTK/INCLUDE/GLIB-2.0 -IC:/GTK/INCLUDE/GTK-2.0 -IC:/GTK/INCLUDE  

gtk_lib=-LC:/GTK/LIB -lgtk-win32-2.0 -lgdk-win32-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lpangowin32-1.0 -lgdi32 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lintl -liconv  

main: test.c  
    gcc -mms-bitfields -Wall -g test.c -o test ${gtk_include} ${gtk_lib}  

all:  
    ${MAKE} main  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在vim执行make，正常的话应该就会生成test.exe文件了。&lt;/p&gt;
</description></item> 
    <item>
    <title>让windows下的vim支持vimpress</title>
    <link>http://www.jiazhoulvke.com/2011/03/01/e8aea9windowse4b88be79a84vime694afe68c81vimpress/</link>
    <pubDate>2011-03-01 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/03/01/e8aea9windowse4b88be79a84vime694afe68c81vimpress/</guid>
    <description>&lt;p&gt;由于wordpress总会很“贴心”的删掉我贴的代码里的空格(还好我贴的是vimscript和javascript，不讲究缩进，如果贴的是python，那不是要抓狂了么？)，所以我一直在找一个比较好用又不会自作聪明的离线编辑器。&lt;/p&gt;

&lt;p&gt;微软的客户端蛋疼的不支持Windows2003，其他的一些离线编辑器感觉也不怎么好用，最终还是选择了&lt;a href=&#34;http://wowubuntu.com/vimrepress.html&#34;&gt;vimrepress&lt;/a&gt;，依赖python。我用的vim版本是7.2，默认支持的python版本是2.4，有点太低了，所以，还是得重新编译一个vim，让它支持更新版本的python。由于网上已经有人编译了支持python2.5和2.6的vim，所以不需要我们再去编译了，网址:&lt;a href=&#34;http://www.gooli.org/blog/gvim-72-with-python-2526-support-windows-binaries/&#34;&gt;http://www.gooli.org/blog/gvim-72-with-python-2526-support-windows-binaries/&lt;/a&gt;。里面有两个压缩包，一个是支持python2.5,一个是支持2.6，除非有特殊要求，否则一般来说当然是新的更好，所以我下载了gvim72python26.zip这个文件。&lt;/p&gt;

&lt;p&gt;下载后解压会得到两个文件：gvim.exe和vim.exe，用这两个文件覆盖vim安装目录下的同名文件即可。&lt;/p&gt;

&lt;p&gt;然后从python的官方网站上下载python2.6并安装，并把python的安装路径添加到系统环境变量里面，一切大功告成！&lt;/p&gt;

&lt;p&gt;顺便说句，这篇文章就是在vimrepress里写的，嘿嘿！&lt;/p&gt;
</description></item> 
    <item>
    <title>一个强制在当前标签打开链接的油猴脚本</title>
    <link>http://www.jiazhoulvke.com/2011/02/17/e4b880e4b8aae5bcbae588b6e59ca8e5bd93e5898de6a087e7adbee68993e5bc80e993bee68ea5e79a84e6b2b9e78cb4e8849ae69cac/</link>
    <pubDate>2011-02-17 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/02/17/e4b880e4b8aae5bcbae588b6e59ca8e5bd93e5898de6a087e7adbee68993e5bc80e993bee68ea5e79a84e6b2b9e78cb4e8849ae69cac/</guid>
    <description>&lt;p&gt;今天逛谷歌众包论坛时看到有人有这个需求：“&lt;a href=&#34;http://bbs.pxysm.com/thread-210028-1-1.html&#34;&gt;如何强制在当前页打开链接？&lt;/a&gt;”，之前从来没有为chrome写过扩展或者脚本，这次google了一下油猴脚本的写法，写了个简单的小玩意。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// ----------------------------------------
// Name     open in current tab
// Version  1.0
// Author   jiazhoulvke
// email    jiazhoulvke@gmail.com
// blog     http://jiazhoulvke
// ----------------------------------------
// ==UserScript==
// @name          open in current tab
// @namespace     [http://jiazhoulvke.com/](http://jiazhoulvke.com/)
// @version       1.0
// @description   强制在当前窗口打开链接
// @include       *
// @exclude       http://chrome.google.com/*
// ==/UserScript==

var linkArray=document.getElementsByTagName(&amp;quot;A&amp;quot;);
for (i=0;i&amp;lt;linkArray.length;i++) {
    if (linkArray[i].target!=&amp;quot;&amp;quot;) {
        linkArray[i].target=&amp;quot;_self&amp;quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上传到了userscripts:&lt;a href=&#34;http://userscripts.org/scripts/show/97166&#34;&gt;http://userscripts.org/scripts/show/97166&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;update:&lt;/p&gt;

&lt;p&gt;由于没有考虑到有人在网页的头部添加&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;base target=&amp;quot;_blank&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;所以之前的版本对于某些网站网站无效(比如网易)，于是重新写了一个。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// ----------------------------------------
// Name     open in current tab
// Version  1.1
// Author   jiazhoulvke
// email    jiazhoulvke@gmail.com
// blog     http://jiazhoulvke
// ----------------------------------------
// ==UserScript==
// @name          open in current tab
// @namespace     http://jiazhoulvke.com/
// @version       1.1
// @description   强制在当前窗口打开链接
// @include       *
// @exclude       http://chrome.google.com/*
// ==/UserScript==

var linkArray=**document**.getElementsByTagName(&amp;quot;A&amp;quot;);
for (i=0;i&amp;lt;linkArray.length;i++) {
    if (linkArray[i].href!=&amp;quot;#&amp;quot; &amp;amp;&amp;amp; linkArray[i].href!=&amp;quot;javascript:;&amp;quot; &amp;amp;&amp;amp; linkArray[i].href!=&amp;quot;javascript:void(0)&amp;quot;) {
        linkArray[i].target=&amp;quot;_self&amp;quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description></item> 
    <item>
    <title>vim里对文本进行简繁转换</title>
    <link>http://www.jiazhoulvke.com/2011/02/15/vime9878ce5afb9e69687e69cace8bf9be8a18ce7ae80e7b981e8bdace68da2/</link>
    <pubDate>2011-02-15 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/02/15/vime9878ce5afb9e69687e69cace8bf9be8a18ce7ae80e7b981e8bdace68da2/</guid>
    <description>&lt;p&gt;最近做的一个项目里需要把原本全部是简体中文的文件转换为繁体中文。vim是没有这个功能的，记得有个编辑器是有这个功能，忘了是Notepad++还是UtrlEdit什么的了。咱也不羡慕，vim script能做得更好！&lt;/p&gt;

&lt;p&gt;google了一下，没发现有谁写过类似的vim插件，无奈只好自己搞定。身为vim菜鸟，第一件事就是去看帮助文档，结果发现了牛B的tr()函数，几句代码就解决问题。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function! G2B()  
    let jianti=&amp;quot;皑蔼碍爱翱袄奥坝罢摆败颁办绊帮绑镑谤剥饱宝报鲍辈贝钡狈备惫绷笔毕毙闭边编贬变辩辫鳖瘪濒滨宾摈饼拨钵铂驳卜补参蚕残惭惨灿苍舱仓沧厕侧册测层诧搀掺蝉馋谗缠铲产阐颤场尝长偿肠厂畅钞车彻尘陈衬撑称惩诚骋痴迟驰耻齿炽冲虫宠畴踌筹绸丑橱厨锄雏础储触处传疮闯创锤纯绰辞词赐聪葱囱从丛凑窜错达带贷担单郸掸胆惮诞弹当挡党荡档捣岛祷导盗灯邓敌涤递缔点垫电淀钓调迭谍叠钉顶锭订东动栋冻斗犊独读赌镀锻断缎兑队对吨顿钝夺鹅额讹恶饿儿尔饵贰发罚阀珐矾钒烦范贩饭访纺飞废费纷坟奋愤粪丰枫锋风疯冯缝讽凤肤辐抚辅赋复负讣妇缚该钙盖干赶秆赣冈刚钢纲岗皋镐搁鸽阁铬个给龚宫巩贡钩沟构购够蛊顾剐关观馆惯贯广规硅归龟闺轨诡柜贵刽辊滚锅国过骇韩汉阂鹤贺横轰鸿红后壶护沪户哗华画划话怀坏欢环还缓换唤痪焕涣黄谎挥辉毁贿秽会烩汇讳诲绘荤浑伙获货祸击机积饥讥鸡绩缉极辑级挤几蓟剂济计记际继纪夹荚颊贾钾价驾歼监坚笺间艰缄茧检碱硷拣捡简俭减荐槛鉴践贱见键舰剑饯渐溅涧浆蒋桨奖讲酱胶浇骄娇搅铰矫侥脚饺缴绞轿较秸阶节茎惊经颈静镜径痉竞净纠厩旧驹举据锯惧剧鹃绢杰洁结诫届紧锦仅谨进晋烬尽劲荆觉决诀绝钧军骏开凯颗壳课垦恳抠库裤夸块侩宽矿旷况亏岿窥馈溃扩阔蜡腊莱来赖蓝栏拦篮阑兰澜谰揽览懒缆烂滥捞劳涝乐镭垒类泪篱离里鲤礼丽厉励砾历沥隶俩联莲连镰怜涟帘敛脸链恋炼练粮凉两辆谅疗辽镣猎临邻鳞凛赁龄铃凌灵岭领馏刘龙聋咙笼垄拢陇楼娄搂篓芦卢颅庐炉掳卤虏鲁赂禄录陆驴吕铝侣屡缕虑滤绿峦挛孪滦乱抡轮伦仑沦纶论萝罗逻锣箩骡骆络妈玛码蚂马骂吗买麦卖迈脉瞒馒蛮满谩猫锚铆贸么霉没镁门闷们锰梦谜弥觅绵缅庙灭悯闽鸣铭谬谋亩钠纳难挠脑恼闹馁腻撵捻酿鸟聂啮镊镍柠狞宁拧泞钮纽脓浓农疟诺欧鸥殴呕沤盘庞国爱赔喷鹏骗飘频贫苹凭评泼颇扑铺朴谱脐齐骑岂启气弃讫牵扦钎铅迁签谦钱钳潜浅谴堑枪呛墙蔷强抢锹桥乔侨翘窍窃钦亲轻氢倾顷请庆琼穷趋区躯驱龋颧权劝却鹊让饶扰绕热韧认纫荣绒软锐闰润洒萨鳃赛伞丧骚扫涩杀纱筛晒闪陕赡缮伤赏烧绍赊摄慑设绅审婶肾渗声绳胜圣师狮湿诗尸时蚀实识驶势释饰视试寿兽枢输书赎属术树竖数帅双谁税顺说硕烁丝饲耸怂颂讼诵擞苏诉肃虽绥岁孙损笋缩琐锁獭挞抬摊贪瘫滩坛谭谈叹汤烫涛绦腾誊锑题体屉条贴铁厅听烃铜统头图涂团颓蜕脱鸵驮驼椭洼袜弯湾顽万网韦违围为潍维苇伟伪纬谓卫温闻纹稳问瓮挝蜗涡窝呜钨乌诬无芜吴坞雾务误锡牺袭习铣戏细虾辖峡侠狭厦锨鲜纤咸贤衔闲显险现献县馅羡宪线厢镶乡详响项萧销晓啸蝎协挟携胁谐写泻谢锌衅兴汹锈绣虚嘘须许绪续轩悬选癣绚学勋询寻驯训讯逊压鸦鸭哑亚讶阉烟盐严颜阎艳厌砚彦谚验鸯杨扬疡阳痒养样瑶摇尧遥窑谣药爷页业叶医铱颐遗仪彝蚁艺亿忆义诣议谊译异绎荫阴银饮樱婴鹰应缨莹萤营荧蝇颖哟拥佣痈踊咏涌优忧邮铀犹游诱舆鱼渔娱与屿语吁御狱誉预驭鸳渊辕园员圆缘远愿约跃钥岳粤悦阅云郧匀陨运蕴酝晕韵杂灾载攒暂赞赃脏凿枣灶责择则泽贼赠扎札轧铡闸诈斋债毡盏斩辗崭栈战绽张涨帐账胀赵蛰辙锗这贞针侦诊镇阵挣睁狰帧郑证织职执纸挚掷帜质钟终种肿众诌轴皱昼骤猪诸诛烛瞩嘱贮铸筑驻专砖转赚桩庄装妆壮状锥赘坠缀谆浊兹资渍踪综总纵邹诅组钻致钟么为只凶准启板里雳余链泄&amp;quot;  
    let fanti=&amp;quot;皚藹礙愛翺襖奧壩罷擺敗頒辦絆幫綁鎊謗剝飽寶報鮑輩貝鋇狽備憊繃筆畢斃閉邊編貶變辯辮鼈癟瀕濱賓擯餅撥缽鉑駁蔔補參蠶殘慚慘燦蒼艙倉滄廁側冊測層詫攙摻蟬饞讒纏鏟産闡顫場嘗長償腸廠暢鈔車徹塵陳襯撐稱懲誠騁癡遲馳恥齒熾沖蟲寵疇躊籌綢醜櫥廚鋤雛礎儲觸處傳瘡闖創錘純綽辭詞賜聰蔥囪從叢湊竄錯達帶貸擔單鄲撣膽憚誕彈當擋黨蕩檔搗島禱導盜燈鄧敵滌遞締點墊電澱釣調叠諜疊釘頂錠訂東動棟凍鬥犢獨讀賭鍍鍛斷緞兌隊對噸頓鈍奪鵝額訛惡餓兒爾餌貳發罰閥琺礬釩煩範販飯訪紡飛廢費紛墳奮憤糞豐楓鋒風瘋馮縫諷鳳膚輻撫輔賦複負訃婦縛該鈣蓋幹趕稈贛岡剛鋼綱崗臯鎬擱鴿閣鉻個給龔宮鞏貢鈎溝構購夠蠱顧剮關觀館慣貫廣規矽歸龜閨軌詭櫃貴劊輥滾鍋國過駭韓漢閡鶴賀橫轟鴻紅後壺護滬戶嘩華畫劃話懷壞歡環還緩換喚瘓煥渙黃謊揮輝毀賄穢會燴彙諱誨繪葷渾夥獲貨禍擊機積饑譏雞績緝極輯級擠幾薊劑濟計記際繼紀夾莢頰賈鉀價駕殲監堅箋間艱緘繭檢堿鹼揀撿簡儉減薦檻鑒踐賤見鍵艦劍餞漸濺澗漿蔣槳獎講醬膠澆驕嬌攪鉸矯僥腳餃繳絞轎較稭階節莖驚經頸靜鏡徑痙競淨糾廄舊駒舉據鋸懼劇鵑絹傑潔結誡屆緊錦僅謹進晉燼盡勁荊覺決訣絕鈞軍駿開凱顆殼課墾懇摳庫褲誇塊儈寬礦曠況虧巋窺饋潰擴闊蠟臘萊來賴藍欄攔籃闌蘭瀾讕攬覽懶纜爛濫撈勞澇樂鐳壘類淚籬離裏鯉禮麗厲勵礫曆瀝隸倆聯蓮連鐮憐漣簾斂臉鏈戀煉練糧涼兩輛諒療遼鐐獵臨鄰鱗凜賃齡鈴淩靈嶺領餾劉龍聾嚨籠壟攏隴樓婁摟簍蘆盧顱廬爐擄鹵虜魯賂祿錄陸驢呂鋁侶屢縷慮濾綠巒攣孿灤亂掄輪倫侖淪綸論蘿羅邏鑼籮騾駱絡媽瑪碼螞馬罵嗎買麥賣邁脈瞞饅蠻滿謾貓錨鉚貿麽黴沒鎂門悶們錳夢謎彌覓綿緬廟滅憫閩鳴銘謬謀畝鈉納難撓腦惱鬧餒膩攆撚釀鳥聶齧鑷鎳檸獰甯擰濘鈕紐膿濃農瘧諾歐鷗毆嘔漚盤龐國愛賠噴鵬騙飄頻貧蘋憑評潑頗撲鋪樸譜臍齊騎豈啓氣棄訖牽扡釺鉛遷簽謙錢鉗潛淺譴塹槍嗆牆薔強搶鍬橋喬僑翹竅竊欽親輕氫傾頃請慶瓊窮趨區軀驅齲顴權勸卻鵲讓饒擾繞熱韌認紉榮絨軟銳閏潤灑薩鰓賽傘喪騷掃澀殺紗篩曬閃陝贍繕傷賞燒紹賒攝懾設紳審嬸腎滲聲繩勝聖師獅濕詩屍時蝕實識駛勢釋飾視試壽獸樞輸書贖屬術樹豎數帥雙誰稅順說碩爍絲飼聳慫頌訟誦擻蘇訴肅雖綏歲孫損筍縮瑣鎖獺撻擡攤貪癱灘壇譚談歎湯燙濤縧騰謄銻題體屜條貼鐵廳聽烴銅統頭圖塗團頹蛻脫鴕馱駝橢窪襪彎灣頑萬網韋違圍爲濰維葦偉僞緯謂衛溫聞紋穩問甕撾蝸渦窩嗚鎢烏誣無蕪吳塢霧務誤錫犧襲習銑戲細蝦轄峽俠狹廈鍁鮮纖鹹賢銜閑顯險現獻縣餡羨憲線廂鑲鄉詳響項蕭銷曉嘯蠍協挾攜脅諧寫瀉謝鋅釁興洶鏽繡虛噓須許緒續軒懸選癬絢學勳詢尋馴訓訊遜壓鴉鴨啞亞訝閹煙鹽嚴顔閻豔厭硯彥諺驗鴦楊揚瘍陽癢養樣瑤搖堯遙窯謠藥爺頁業葉醫銥頤遺儀彜蟻藝億憶義詣議誼譯異繹蔭陰銀飲櫻嬰鷹應纓瑩螢營熒蠅穎喲擁傭癰踴詠湧優憂郵鈾猶遊誘輿魚漁娛與嶼語籲禦獄譽預馭鴛淵轅園員圓緣遠願約躍鑰嶽粵悅閱雲鄖勻隕運蘊醞暈韻雜災載攢暫贊贓髒鑿棗竈責擇則澤賊贈紮劄軋鍘閘詐齋債氈盞斬輾嶄棧戰綻張漲帳賬脹趙蟄轍鍺這貞針偵診鎮陣掙睜猙幀鄭證織職執紙摯擲幟質鍾終種腫衆謅軸皺晝驟豬諸誅燭矚囑貯鑄築駐專磚轉賺樁莊裝妝壯狀錐贅墜綴諄濁茲資漬蹤綜總縱鄒詛組鑽緻鐘麼為隻兇準啟闆裡靂餘鍊洩&amp;quot;  
    normal G  
    let maxnum=line(&amp;quot;.&amp;quot;)  
    normal gg  
    let i=0  
    while i&amp;lt;maxnum  
        let curLine=getline(&amp;quot;.&amp;quot;)  
        let newCurLine=tr(curLine,jianti,fanti)  
        let result=setline(&amp;quot;.&amp;quot;,newCurLine)  
        normal j  
        let i=i+1  
    endwhile  
endfunction  

function! B2G()  
    let jianti=&amp;quot;皑蔼碍爱翱袄奥坝罢摆败颁办绊帮绑镑谤剥饱宝报鲍辈贝钡狈备惫绷笔毕毙闭边编贬变辩辫鳖瘪濒滨宾摈饼拨钵铂驳卜补参蚕残惭惨灿苍舱仓沧厕侧册测层诧搀掺蝉馋谗缠铲产阐颤场尝长偿肠厂畅钞车彻尘陈衬撑称惩诚骋痴迟驰耻齿炽冲虫宠畴踌筹绸丑橱厨锄雏础储触处传疮闯创锤纯绰辞词赐聪葱囱从丛凑窜错达带贷担单郸掸胆惮诞弹当挡党荡档捣岛祷导盗灯邓敌涤递缔点垫电淀钓调迭谍叠钉顶锭订东动栋冻斗犊独读赌镀锻断缎兑队对吨顿钝夺鹅额讹恶饿儿尔饵贰发罚阀珐矾钒烦范贩饭访纺飞废费纷坟奋愤粪丰枫锋风疯冯缝讽凤肤辐抚辅赋复负讣妇缚该钙盖干赶秆赣冈刚钢纲岗皋镐搁鸽阁铬个给龚宫巩贡钩沟构购够蛊顾剐关观馆惯贯广规硅归龟闺轨诡柜贵刽辊滚锅国过骇韩汉阂鹤贺横轰鸿红后壶护沪户哗华画划话怀坏欢环还缓换唤痪焕涣黄谎挥辉毁贿秽会烩汇讳诲绘荤浑伙获货祸击机积饥讥鸡绩缉极辑级挤几蓟剂济计记际继纪夹荚颊贾钾价驾歼监坚笺间艰缄茧检碱硷拣捡简俭减荐槛鉴践贱见键舰剑饯渐溅涧浆蒋桨奖讲酱胶浇骄娇搅铰矫侥脚饺缴绞轿较秸阶节茎惊经颈静镜径痉竞净纠厩旧驹举据锯惧剧鹃绢杰洁结诫届紧锦仅谨进晋烬尽劲荆觉决诀绝钧军骏开凯颗壳课垦恳抠库裤夸块侩宽矿旷况亏岿窥馈溃扩阔蜡腊莱来赖蓝栏拦篮阑兰澜谰揽览懒缆烂滥捞劳涝乐镭垒类泪篱离里鲤礼丽厉励砾历沥隶俩联莲连镰怜涟帘敛脸链恋炼练粮凉两辆谅疗辽镣猎临邻鳞凛赁龄铃凌灵岭领馏刘龙聋咙笼垄拢陇楼娄搂篓芦卢颅庐炉掳卤虏鲁赂禄录陆驴吕铝侣屡缕虑滤绿峦挛孪滦乱抡轮伦仑沦纶论萝罗逻锣箩骡骆络妈玛码蚂马骂吗买麦卖迈脉瞒馒蛮满谩猫锚铆贸么霉没镁门闷们锰梦谜弥觅绵缅庙灭悯闽鸣铭谬谋亩钠纳难挠脑恼闹馁腻撵捻酿鸟聂啮镊镍柠狞宁拧泞钮纽脓浓农疟诺欧鸥殴呕沤盘庞国爱赔喷鹏骗飘频贫苹凭评泼颇扑铺朴谱脐齐骑岂启气弃讫牵扦钎铅迁签谦钱钳潜浅谴堑枪呛墙蔷强抢锹桥乔侨翘窍窃钦亲轻氢倾顷请庆琼穷趋区躯驱龋颧权劝却鹊让饶扰绕热韧认纫荣绒软锐闰润洒萨鳃赛伞丧骚扫涩杀纱筛晒闪陕赡缮伤赏烧绍赊摄慑设绅审婶肾渗声绳胜圣师狮湿诗尸时蚀实识驶势释饰视试寿兽枢输书赎属术树竖数帅双谁税顺说硕烁丝饲耸怂颂讼诵擞苏诉肃虽绥岁孙损笋缩琐锁獭挞抬摊贪瘫滩坛谭谈叹汤烫涛绦腾誊锑题体屉条贴铁厅听烃铜统头图涂团颓蜕脱鸵驮驼椭洼袜弯湾顽万网韦违围为潍维苇伟伪纬谓卫温闻纹稳问瓮挝蜗涡窝呜钨乌诬无芜吴坞雾务误锡牺袭习铣戏细虾辖峡侠狭厦锨鲜纤咸贤衔闲显险现献县馅羡宪线厢镶乡详响项萧销晓啸蝎协挟携胁谐写泻谢锌衅兴汹锈绣虚嘘须许绪续轩悬选癣绚学勋询寻驯训讯逊压鸦鸭哑亚讶阉烟盐严颜阎艳厌砚彦谚验鸯杨扬疡阳痒养样瑶摇尧遥窑谣药爷页业叶医铱颐遗仪彝蚁艺亿忆义诣议谊译异绎荫阴银饮樱婴鹰应缨莹萤营荧蝇颖哟拥佣痈踊咏涌优忧邮铀犹游诱舆鱼渔娱与屿语吁御狱誉预驭鸳渊辕园员圆缘远愿约跃钥岳粤悦阅云郧匀陨运蕴酝晕韵杂灾载攒暂赞赃脏凿枣灶责择则泽贼赠扎札轧铡闸诈斋债毡盏斩辗崭栈战绽张涨帐账胀赵蛰辙锗这贞针侦诊镇阵挣睁狰帧郑证织职执纸挚掷帜质钟终种肿众诌轴皱昼骤猪诸诛烛瞩嘱贮铸筑驻专砖转赚桩庄装妆壮状锥赘坠缀谆浊兹资渍踪综总纵邹诅组钻致钟么为只凶准启板里雳余链泄&amp;quot;  
    let fanti=&amp;quot;皚藹礙愛翺襖奧壩罷擺敗頒辦絆幫綁鎊謗剝飽寶報鮑輩貝鋇狽備憊繃筆畢斃閉邊編貶變辯辮鼈癟瀕濱賓擯餅撥缽鉑駁蔔補參蠶殘慚慘燦蒼艙倉滄廁側冊測層詫攙摻蟬饞讒纏鏟産闡顫場嘗長償腸廠暢鈔車徹塵陳襯撐稱懲誠騁癡遲馳恥齒熾沖蟲寵疇躊籌綢醜櫥廚鋤雛礎儲觸處傳瘡闖創錘純綽辭詞賜聰蔥囪從叢湊竄錯達帶貸擔單鄲撣膽憚誕彈當擋黨蕩檔搗島禱導盜燈鄧敵滌遞締點墊電澱釣調叠諜疊釘頂錠訂東動棟凍鬥犢獨讀賭鍍鍛斷緞兌隊對噸頓鈍奪鵝額訛惡餓兒爾餌貳發罰閥琺礬釩煩範販飯訪紡飛廢費紛墳奮憤糞豐楓鋒風瘋馮縫諷鳳膚輻撫輔賦複負訃婦縛該鈣蓋幹趕稈贛岡剛鋼綱崗臯鎬擱鴿閣鉻個給龔宮鞏貢鈎溝構購夠蠱顧剮關觀館慣貫廣規矽歸龜閨軌詭櫃貴劊輥滾鍋國過駭韓漢閡鶴賀橫轟鴻紅後壺護滬戶嘩華畫劃話懷壞歡環還緩換喚瘓煥渙黃謊揮輝毀賄穢會燴彙諱誨繪葷渾夥獲貨禍擊機積饑譏雞績緝極輯級擠幾薊劑濟計記際繼紀夾莢頰賈鉀價駕殲監堅箋間艱緘繭檢堿鹼揀撿簡儉減薦檻鑒踐賤見鍵艦劍餞漸濺澗漿蔣槳獎講醬膠澆驕嬌攪鉸矯僥腳餃繳絞轎較稭階節莖驚經頸靜鏡徑痙競淨糾廄舊駒舉據鋸懼劇鵑絹傑潔結誡屆緊錦僅謹進晉燼盡勁荊覺決訣絕鈞軍駿開凱顆殼課墾懇摳庫褲誇塊儈寬礦曠況虧巋窺饋潰擴闊蠟臘萊來賴藍欄攔籃闌蘭瀾讕攬覽懶纜爛濫撈勞澇樂鐳壘類淚籬離裏鯉禮麗厲勵礫曆瀝隸倆聯蓮連鐮憐漣簾斂臉鏈戀煉練糧涼兩輛諒療遼鐐獵臨鄰鱗凜賃齡鈴淩靈嶺領餾劉龍聾嚨籠壟攏隴樓婁摟簍蘆盧顱廬爐擄鹵虜魯賂祿錄陸驢呂鋁侶屢縷慮濾綠巒攣孿灤亂掄輪倫侖淪綸論蘿羅邏鑼籮騾駱絡媽瑪碼螞馬罵嗎買麥賣邁脈瞞饅蠻滿謾貓錨鉚貿麽黴沒鎂門悶們錳夢謎彌覓綿緬廟滅憫閩鳴銘謬謀畝鈉納難撓腦惱鬧餒膩攆撚釀鳥聶齧鑷鎳檸獰甯擰濘鈕紐膿濃農瘧諾歐鷗毆嘔漚盤龐國愛賠噴鵬騙飄頻貧蘋憑評潑頗撲鋪樸譜臍齊騎豈啓氣棄訖牽扡釺鉛遷簽謙錢鉗潛淺譴塹槍嗆牆薔強搶鍬橋喬僑翹竅竊欽親輕氫傾頃請慶瓊窮趨區軀驅齲顴權勸卻鵲讓饒擾繞熱韌認紉榮絨軟銳閏潤灑薩鰓賽傘喪騷掃澀殺紗篩曬閃陝贍繕傷賞燒紹賒攝懾設紳審嬸腎滲聲繩勝聖師獅濕詩屍時蝕實識駛勢釋飾視試壽獸樞輸書贖屬術樹豎數帥雙誰稅順說碩爍絲飼聳慫頌訟誦擻蘇訴肅雖綏歲孫損筍縮瑣鎖獺撻擡攤貪癱灘壇譚談歎湯燙濤縧騰謄銻題體屜條貼鐵廳聽烴銅統頭圖塗團頹蛻脫鴕馱駝橢窪襪彎灣頑萬網韋違圍爲濰維葦偉僞緯謂衛溫聞紋穩問甕撾蝸渦窩嗚鎢烏誣無蕪吳塢霧務誤錫犧襲習銑戲細蝦轄峽俠狹廈鍁鮮纖鹹賢銜閑顯險現獻縣餡羨憲線廂鑲鄉詳響項蕭銷曉嘯蠍協挾攜脅諧寫瀉謝鋅釁興洶鏽繡虛噓須許緒續軒懸選癬絢學勳詢尋馴訓訊遜壓鴉鴨啞亞訝閹煙鹽嚴顔閻豔厭硯彥諺驗鴦楊揚瘍陽癢養樣瑤搖堯遙窯謠藥爺頁業葉醫銥頤遺儀彜蟻藝億憶義詣議誼譯異繹蔭陰銀飲櫻嬰鷹應纓瑩螢營熒蠅穎喲擁傭癰踴詠湧優憂郵鈾猶遊誘輿魚漁娛與嶼語籲禦獄譽預馭鴛淵轅園員圓緣遠願約躍鑰嶽粵悅閱雲鄖勻隕運蘊醞暈韻雜災載攢暫贊贓髒鑿棗竈責擇則澤賊贈紮劄軋鍘閘詐齋債氈盞斬輾嶄棧戰綻張漲帳賬脹趙蟄轍鍺這貞針偵診鎮陣掙睜猙幀鄭證織職執紙摯擲幟質鍾終種腫衆謅軸皺晝驟豬諸誅燭矚囑貯鑄築駐專磚轉賺樁莊裝妝壯狀錐贅墜綴諄濁茲資漬蹤綜總縱鄒詛組鑽緻鐘麼為隻兇準啟闆裡靂餘鍊洩&amp;quot;  
    normal G  
    let maxnum=line(&amp;quot;.&amp;quot;)  
    normal gg  
    let i=0  
    while i&amp;lt;maxnum  
        let curLine=getline(&amp;quot;.&amp;quot;)  
        let newCurLine=tr(curLine,fanti,jianti)  
        let result=setline(&amp;quot;.&amp;quot;,newCurLine)  
        normal j  
        let i=i+1  
    endwhile  
endfunction  

&amp;quot;为了对多个文件进行简繁转换，临时将F7设置为转换的快捷键  
&amp;quot;map &amp;lt;silent&amp;gt;&amp;lt;F7&amp;gt; &amp;lt;ESC&amp;gt;:call G2B()&amp;lt;CR&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中G2B是简转繁，B2G是繁转简。设置了F7为快捷键后，碰到需要转换的文件，直接按F7就搞定了，比起把代码复制到在线转换简繁的网站上进行转换，要快多了。&lt;/p&gt;
</description></item> 
    <item>
    <title>Hello world！</title>
    <link>http://www.jiazhoulvke.com/2011/02/14/hello-world/</link>
    <pubDate>2011-02-14 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2011/02/14/hello-world/</guid>
    <description>&lt;p&gt;2011年2月15日，正式开博&lt;/p&gt;
</description></item></channel>
</rss>
