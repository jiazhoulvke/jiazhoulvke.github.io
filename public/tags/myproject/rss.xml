<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
    <title>Myproject on jiazhoulvke&#39;s Blog</title>
    <link>http://www.jiazhoulvke.com/tags/myproject/</link>
    <description>Recent content in Myproject on jiazhoulvke&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator> 
    <language>zh-cn</language> 
    <lastBuildDate>2014-02-08 00:00:00</lastBuildDate> 
    <atom:link href="/tags/myproject/" rel="self" type="application/rss+xml" /> 
    <item>
    <title>时隔两年，myproject终于更新了</title>
    <link>http://www.jiazhoulvke.com/2014/02/08/e697b6e99a94e4b8a4e5b9b4efbc8cmyprojecte7bb88e4ba8ee69bb4e696b0e4ba86/</link>
    <pubDate>2014-02-08 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2014/02/08/e697b6e99a94e4b8a4e5b9b4efbc8cmyprojecte7bb88e4ba8ee69bb4e696b0e4ba86/</guid>
    <description>

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/170.html&#34;&gt;2012年6月我写了myproject这个插件&lt;/a&gt;，还只是个半成品，不过凑合着也能用，就这样一直用下去了。每次想完善一下的时候就想着先凑合着用，等有时间再改，就这样居然拖了近两年……这次终于下定决心，利用过年前的空闲时间完全重写了myproject。其实真的写起来一天就搞定了，剩下几天都是测试、修复bug。&lt;/p&gt;

&lt;h2 id=&#34;更新内容&#34;&gt;更新内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;最开始的版本是纯vimscript的，后来因为在windows下更新tags时会弹出命令行窗口就加入了一部分python代码，现在为了兼容性还是改回了纯vimscript，不再依赖python。&lt;/li&gt;
&lt;li&gt;增加 :MPCreate 命令，可以通过此命令创建项目。&lt;/li&gt;
&lt;li&gt;增加 :MPProjectList 命令，可以浏览、删除、载入通过 :MPCreate 创建的项目。&lt;/li&gt;
&lt;li&gt;保存、载入Session的命令从 :MPSaveSession、:MPLoadSession 改成了 :MPSessionSave、:MPSessionLoad。&lt;/li&gt;
&lt;li&gt;:MPCreate、:MPLoad、:MPSessionLoad、:MPSessionSave等命令都可以补全了。&lt;/li&gt;
&lt;li&gt;去掉几个实用性不大的选项。&lt;/li&gt;
&lt;li&gt;修改了部分变量名。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;命令说明&#34;&gt;命令说明&lt;/h2&gt;

&lt;h3 id=&#34;mpcreate&#34;&gt;:MPCreate&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;直接输入 :MPCreate ，myproject会让你输入项目的路径及名称，然后会将该项目保存到项目列表中。当你用 :MPLoad 载入项目时就可以利用Tab自动补全项目路径了。&lt;/li&gt;
&lt;li&gt;加入&amp;rdquo;template&amp;rdquo;参数(即:MPCreate template)，myproject会在项目中的project.vim文件中写入如下内容:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;let g:MP_Ctags_Enable = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Global_Enable = 1&lt;br /&gt;
&amp;ldquo;set cscopeprg=gtags-cscope&lt;br /&gt;
&amp;ldquo;let g:MP_Cscope_Enable = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Session_AutoSave = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Session_AutoLoad = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Write_AutoUpdate = 1&lt;br /&gt;
&amp;ldquo;let g:MP_Source_File_Ext_Name = &amp;ldquo;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你可以按自己的需求去掉某个选项的注释。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;加入&amp;rdquo;question&amp;rdquo;参数(即:MPCreate question)，myproject会一一询问你是否需要开启某个选项，然后将结果保存到project.vim中。见下图:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPCreate_question.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPCreate_question.png&#34; alt=&#34;MPCreate_question.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;mpprojectlist&#34;&gt;:MPProjectList&lt;/h3&gt;

&lt;p&gt;输入 :MPProjectList 会打开项目列表窗口，列出所有你创建的项目。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPProjectList.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPProjectList.png&#34; alt=&#34;MPProjectList.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;移动光标到到你需要载入的项目上，按回车即可载入。按d则删除项目。&lt;/p&gt;

&lt;p&gt;按小写的c会调用:MPCreate，按大写的C会调用:MPCreate question。&lt;/p&gt;

&lt;p&gt;按q或者ESC会关闭项目列表窗口。&lt;/p&gt;

&lt;h3 id=&#34;mpload&#34;&gt;:MPLoad&lt;/h3&gt;

&lt;p&gt;输入&amp;rdquo;:MPLoad &amp;ldquo;后按Tab可以自动补全项目列表中的项目。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPLoad.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPLoad.png&#34; alt=&#34;MPLoad.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;mpsessionsave&#34;&gt;:MPSessionSave&lt;/h3&gt;

&lt;p&gt;直接输入 :MPSessionSave 会将Session保存在项目根目录的default.session.vim文件中。&lt;/p&gt;

&lt;p&gt;假如输入&amp;rdquo;:MPSessionSave abc&amp;rdquo;则会保存到abc.session.vim。&lt;/p&gt;

&lt;h3 id=&#34;mpsessionload&#34;&gt;:MPSessionLoad&lt;/h3&gt;

&lt;p&gt;直接输入 :MPSessionLoad 会载入默认的session文件default.session.vim。&lt;/p&gt;

&lt;p&gt;假如输入&amp;rdquo;:MPSessionLoad abc&amp;rdquo;则会载入abc.session.vim。&lt;/p&gt;

&lt;p&gt;输入&amp;rdquo;:MPSessionLoad &amp;ldquo;后按Tab可以自动补全项目根目录中所有后缀为&amp;rdquo;.session.vim&amp;rdquo;的文件名。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPSessionLoad.png&#34;&gt;&lt;img src=&#34;http://www.jiazhoulvke.com/wp-content/uploads/2014/02/MPSessionLoad.png&#34; alt=&#34;MPSessionLoad.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;变量说明&#34;&gt;变量说明&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;g:MP_ProjectList 项目列表文件。默认值: globpath($HOME, &amp;lsquo;.MP_ProjectList.vim&amp;rsquo;)&lt;/p&gt;

&lt;p&gt;g:MP_ProjectFile 项目文件名。默认值: &amp;lsquo;project.vim&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Window_Height 项目列表高度。默认值: &amp;lsquo;10&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Auto_Close 选择项目后是否自动关闭项目列表。默认值: 1&lt;/p&gt;

&lt;p&gt;g:MP_Ctags_Enable 是否启用ctags。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Ctags_Path 定义ctags的路径。默认值: &amp;lsquo;ctags&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Ctags_Opt 定义ctags参数。默认值: &amp;ldquo;&lt;/p&gt;

&lt;p&gt;g:MP_Global_Enable 是否启用GNU global。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Global_Path 定义GNU Global的路径。默认值: &amp;lsquo;global&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Gtags_Path 定义gtags的路径。默认值: &amp;lsquo;gtags&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Cscope_Enable 是否启用cscope。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Cscope_Path 定义cscope的路径。默认值: &amp;lsquo;cscope&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Source_File_Ext_Name 需要建立tags的文件后缀名,如:&amp;lsquo;c,h,cpp&amp;rsquo;。默认值: &amp;ldquo;&lt;/p&gt;

&lt;p&gt;g:MP_ConfigTitleBar_Enable 是否允许设置标题栏。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_TitleString 标题栏字符串。默认值:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;%t\ %m%r\ [%{expand(\&amp;quot;%:~:.:h\&amp;quot;)}]\ [ProjectPath=%{g:MP_Path}]\ -\ %{v:servername}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;g:MP_Session_AutoSave 是否自动保存项目session。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Session_AutoLoad 是否自动加载项目session。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_DefaultSessionName 项目默认session文件名。默认值: &amp;lsquo;default&amp;rsquo;&lt;/p&gt;

&lt;p&gt;g:MP_Session_Opt Session选项。默认值: &amp;ldquo;blank,buffers,curdir,folds,globals,options,resize,tabpages,winpos,winsize&amp;rdquo;&lt;/p&gt;

&lt;p&gt;g:MP_Path 项目路径。载入项目时插件会自动修改该变量，请勿手动设置。&lt;/p&gt;

&lt;p&gt;g:MP_Write_AutoUpdate 在文件写入时是否自动更新tags。默认值: 0&lt;/p&gt;

&lt;p&gt;g:MP_Bufread_AutoLoad 读入文件时是否自动载入项目文件。默认值: 0&lt;/p&gt;
&lt;/blockquote&gt;
</description></item> 
    <item>
    <title>我的项目管理插件myproject</title>
    <link>http://www.jiazhoulvke.com/2012/06/28/e68891e79a84e9a1b9e79baee7aea1e79086e68f92e4bbb6myproject/</link>
    <pubDate>2012-06-28 00:00:00</pubDate> 
    <guid>http://www.jiazhoulvke.com/2012/06/28/e68891e79a84e9a1b9e79baee7aea1e79086e68f92e4bbb6myproject/</guid>
    <description>&lt;p&gt;发个我自己写的项目管理插件myproject，目前实现了针对项目手动/自动更新tags及cscope数据库、在项目中递归搜索等功能，自己用着还挺舒服的。&lt;/p&gt;

&lt;p&gt;项目地址:&lt;a href=&#34;https://github.com/jiazhoulvke/myproject&#34;&gt;https://github.com/jiazhoulvke/myproject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最开始的版本是纯vimscript的，受不了更新tags时老是弹出命令行窗口，所以改成了python的，用vim的应该都装了python，所以应该不算什么大问题。&lt;/p&gt;

&lt;p&gt;使用方法没project插件那么复杂,只要在项目的根目录下面放一个叫project.vim的文件就行了。该方法来源于这里：   &lt;a href=&#34;http://easwy.com/blog/archives/automatically_update_ctags_tag_cscope_database/#comment-10782&#34;&gt;http://easwy.com/blog/archives/automatically_update_ctags_tag_cscope_database/#comment-10782&lt;/a&gt; ，project.vim不仅仅是项目标识，同时也是项目的配置文件。&lt;/p&gt;

&lt;p&gt;在vim里cd到项目目录中，或者直接打开项目中的文件，然后用“:MPLoad”载入project.vim及tags、cscope数据库（假如存在的话）。&lt;/p&gt;

&lt;p&gt;用“:MPBuildTags”可以建立tags或cscope数据库&lt;/p&gt;

&lt;p&gt;用“:MPUpdateTags”更新当前文件的tags或cscope数据库&lt;/p&gt;

&lt;p&gt;用“:MPSearchInProject 字符串”在项目中递归搜索。grep可用的话会调用grep，否则使用内部的vimgrep。&lt;/p&gt;

&lt;p&gt;假如安装了NerdTree，可以用“:MPNERDTREE”直接打开项目根目录&lt;/p&gt;

&lt;p&gt;在vimrc里写上“let g:MP_Write_AutoUpdate = 1”就会在每次保存文件时自动更新tags，想临时禁用自动更新的话就输入“:let g:MP_Update_Enable = 0”&lt;/p&gt;

&lt;p&gt;一些用于配置的全局变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot; 项目文件名
let g:MyProjectFileName = &#39;project.vim&#39;
&amp;quot; 是否启用ctags
let g:MP_Ctags_Enable = 1
&amp;quot; 是否启用cscope
let g:MP_Cscope_Enable = 1
&amp;quot; 定义ctags的路径
let g:MP_Ctags_Path = &#39;ctags&#39;
&amp;quot; 定义cscope的路径
let g:MP_Cscope_Path = &#39;cscope&#39;
&amp;quot;设置grep的路径
&amp;quot; Tips: 如果是在windows下使用cygwin的grep的话，搜索结果中经常会出现警告，需要在系统中添加一个名叫CYGWIN，值为nodosfilewarning的环境变量
let g:MP_Grep_Path = &#39;grep&#39;
&amp;quot; 定义ctags参数,比如c++项目可以在project.vim中定义&amp;quot;--c++-kinds=+px&amp;quot;
let g:MP_Ctags_Opt = &#39;&#39;
&amp;quot; 在文件写入时是否自动更新tags
let g:MP_Write_AutoUpdate = 0
&amp;quot; 是否自动载入项目文件
let g:MP_Bufread_AutoLoad = 0
&amp;quot; 是否允许更新tags(适合临时设置禁用或启用)
let g:MP_Update_Enable = 1
&amp;quot; 是否允许载入tags(适合临时设置禁用或启用)
let g:MP_Load_Enable = 1
&amp;quot; 需要建立tags的文件后缀名(可以针对不同项目在各自的project.vim文件中定义)
let g:MP_Source_File_Ext_Name = &#39;c,h,cpp,vim,php,py&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更具体的使用方法就直接看代码吧，里面的注释还是蛮详细的。&lt;/p&gt;

&lt;p&gt;发一个我的配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let g:MP_Bufread_AutoLoad = 1
let g:MP_Source_File_Ext_Name = &#39;htm,js,c,h,cpp,vim,php,py,asp&#39;
map &amp;lt;f3&amp;gt; &amp;lt;esc&amp;gt;:MPSearchInProject &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt;&amp;lt;f5&amp;gt; &amp;lt;esc&amp;gt;:MPLoad&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt;&amp;lt;f6&amp;gt; &amp;lt;esc&amp;gt;:MPUpdateTags&amp;lt;cr&amp;gt;

if has(&amp;quot;cscope&amp;quot;)
    set cscopequickfix=s-,c-,d-,i-,t-,e-
    set cscopetagorder=0
    set cscopetag
    set nocscopeverbose
    nmap &amp;lt;C-@&amp;gt;s :cs find s &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;g :cs find g &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;c :cs find c &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;t :cs find t &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;e :cs find e &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;f :cs find f &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cfile&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;i :cs find i ^&amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cfile&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;$&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
    nmap &amp;lt;C-@&amp;gt;d :cs find d &amp;lt;c-r&amp;gt;=expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)&amp;lt;cr&amp;gt;&amp;lt;cr&amp;gt;:copen&amp;lt;cr&amp;gt;
endif
&lt;/code&gt;&lt;/pre&gt;
</description></item></channel>
</rss>
